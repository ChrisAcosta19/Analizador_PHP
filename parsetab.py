
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ARRAY AS ASYNC AWAIT BOOL BREAK CALL CALLABLE CASE CATCH CLASS CLONE CLOSE_TAG COLON COMMA CONST CONTINUE COUNT DECLARE DEFAULT DIE DIFFERENT DIVIDE DIVIDE_EQUALS DO DOT ECHO ELSE ELSEIF EMPTY ENDDECLARE ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE ENUM EQUALS EQUAL_TO EVAL EXIT EXTENDS FALSE FGETS FINAL FINALLY FLOAT FLOAT_TYPE FN FOR FOREACH FSCANF FUNCTION GLOBAL GOTO GREATER_EQUAL GREATER_THAN HALT_COMPILER ID IDENTICAL_TO IF IMPLEMENTS INCLUDE INCLUDE_ONCE INSTANCEOF INSTEADOF INTEGER INTERFACE INT_TYPE ISSET ITERABLE KEY_VALUE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LESS_EQUAL LESS_THAN LIST LOGICAL_AND LOGICAL_NOT LOGICAL_OR LOGICAL_XOR LPAREN MATCH MINUS MINUS_EQUALS MINUS_MINUS MIXED MOD MOD_EQUALS MULTI_LINE_COMMENT NAME NAMESPACE NEW NOT_EQUAL_TO NOT_IDENTICAL_TO NULL OBJECT ONE_LINE_COMMENT OPEN_TAG PLUS PLUS_EQUALS PLUS_PLUS POWER PRINT PRIVATE PROTECTED PUBLIC REQUIRE REQUIRE_ONCE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN RPAREN SELF SEMICOLON STATIC STDIN STRING SWITCH THROW TIMES TIMES_EQUALS TRAIT TRUE TRY UNSET USE VAR VOID WHILE YIELD YIELD_FROMprogram : OPEN_TAG statements CLOSE_TAGstatements : statement2\n                  | statements statement2statement2 : statement SEMICOLON\n                  | if_statement\n                  | while_statement\n                  | for_statement\n                  | function_statement\n                  | ONE_LINE_COMMENT\n                  | MULTI_LINE_COMMENT\n                  | class_declarationstatement : print_statement\n                 | fscanf_statement\n                 | fgets_statement\n                 | assignment_statement\n                 | array_declaration_statement\n                 | BREAK\n                 | CONTINUE\n                 | function_call\n                 | return_statement\n                 | array_indexing\n                 | array_add_element\n                 | array_modify_element\n                 | array_remove_element\n                 | array_count_elements\n                 | expressionfunction_statement : FUNCTION NAME LEFT_PAREN parameters RIGHT_PAREN blockanonymous_function : FUNCTION LEFT_PAREN parameters RIGHT_PAREN block\n                          | FUNCTION LEFT_PAREN RIGHT_PAREN blockparameters : parameter\n                  | parameters COMMA parameterparameter : variable\n                 | variable EQUALS argumentreturn_statement : RETURN argumentsfunction_call : NAME LEFT_PAREN arguments RIGHT_PARENfgets_statement : FGETS LEFT_PAREN STDIN RIGHT_PARENfscanf_statement : FSCANF LEFT_PAREN STDIN COMMA STRING COMMA variable_list RIGHT_PARENvariable_list : variable\n                     | variable_list COMMA variablevariable : ID\n                | ID CALL NAMEassignment_statement : variable assignment_operator argument\n                            | variable PLUS_PLUS\n                            | variable MINUS_MINUSassignment_operator : EQUALS\n                           | PLUS_EQUALS\n                           | MINUS_EQUALS\n                           | TIMES_EQUALS\n                           | DIVIDE_EQUALS\n                           | MOD_EQUALSprint_statement : print_function LEFT_PAREN arguments RIGHT_PAREN\n                       | print_function argumentsprint_function : PRINT\n                      | ECHOarguments : argument\n                 | arguments DOT argument\n                 | arguments COMMA argumentargument : STRING                \n                | expression\n                | array\n                | array_indexing\n                | function_call\n                | variable CALL function_call\n                | anonymous_function\n                | assignment_statement\n                | fgets_statement\n                | object_creation\n                | casting argumentexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | term POWER factor\n            | factorfactor : INTEGER\n              | FLOAT\n              | condition\n              | STRING\n              | LEFT_PAREN expression RIGHT_PARENif_statement : IF parenthesized_condition block\n                    | IF parenthesized_condition block else_if_extended\n                    | IF parenthesized_condition block else_if_extended if_part3\n                    | IF parenthesized_condition block if_part3else_if_extended : if_part2\n                        | else_if_extended if_part2if_part2 : ELSEIF parenthesized_condition blockif_part3 : ELSE blockwhile_statement : WHILE parenthesized_condition blockfor_part1 : FOR LEFT_PAREN assignment_list SEMICOLON\n                 | FOR LEFT_PAREN SEMICOLONfor_statement : for_part1 condition for_part3\n                     | for_part1 for_part3for_part3 : SEMICOLON statement_list RIGHT_PAREN for_part4\n                 | SEMICOLON RIGHT_PAREN for_part4for_part4 : block\n                 | SEMICOLONassignment_list : assignment_statement\n                       | assignment_list COMMA assignment_statementstatement_list : statement\n                      | statement_list COMMA statementblock : LEFT_BRACE statements RIGHT_BRACE\n             | LEFT_BRACE RIGHT_BRACEcondition : simple_condition\n                 | negated_condition\n                 | complex_condition\n                 | parenthesized_conditionsimple_condition : TRUE\n                        | FALSE\n                        | variable\n                        | relational_expressionnegated_condition : LOGICAL_NOT conditioncomplex_condition : condition logical_operator conditionparenthesized_condition : LEFT_PAREN condition RIGHT_PARENrelational_expression : expression relational_operator expressionrelational_operator : EQUAL_TO\n                           | NOT_EQUAL_TO\n                           | LESS_THAN\n                           | GREATER_THAN\n                           | LESS_EQUAL\n                           | GREATER_EQUAL\n                           | IDENTICAL_TO\n                           | NOT_IDENTICAL_TO\n                           | DIFFERENTlogical_operator : LOGICAL_AND\n                        | LOGICAL_OR\n                        | LOGICAL_XORcasting : LEFT_PAREN casting_type RIGHT_PARENcasting_type : INT_TYPE\n                    | FLOAT_TYPEarray_declaration_statement : variable EQUALS arrayarray : ARRAY LEFT_PAREN array_elements RIGHT_PAREN\n             | LEFT_BRACKET array_elements RIGHT_BRACKETarray_elements : array_argument\n                      | array_elements COMMA array_argumentarray_argument : argument\n                      | clave KEY_VALUE argumentclave : STRING\n             | INTEGERarray_indexing : variable LEFT_BRACKET clave RIGHT_BRACKETarray_add_element : variable LEFT_BRACKET RIGHT_BRACKET EQUALS argumentarray_modify_element : variable LEFT_BRACKET clave RIGHT_BRACKET EQUALS argumentarray_remove_element : UNSET LEFT_PAREN variable LEFT_BRACKET clave RIGHT_BRACKET RIGHT_PARENarray_count_elements : COUNT LEFT_PAREN variable RIGHT_PARENclass_declaration : CLASS NAME LEFT_BRACE class_statements RIGHT_BRACE\n                         | CLASS NAME LEFT_BRACE RIGHT_BRACEclass_statements : class_statement\n                        | class_statements class_statementclass_statement : method_declaration\n                       | property_declaration\n                       | ONE_LINE_COMMENT\n                       | MULTI_LINE_COMMENTmethod_declaration : visibility_operator function_statementproperty_declaration : visibility_operator variable SEMICOLONvisibility_operator : PUBLIC\n                           | PRIVATE\n                           | PROTECTEDobject_creation : NEW NAME LEFT_PAREN RIGHT_PAREN\n                       | NEW NAME LEFT_PAREN arguments RIGHT_PAREN'
    
_lr_action_items = {'OPEN_TAG':([0,],[2,]),'$end':([1,60,],[0,-1,]),'ONE_LINE_COMMENT':([2,3,4,6,7,8,9,10,11,12,61,62,79,137,138,139,140,149,191,192,193,196,197,200,201,202,207,208,209,210,211,212,213,239,240,241,243,244,249,250,251,266,267,270,],[10,10,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,-82,10,-90,-93,212,-83,-85,-86,10,-104,-98,-96,-97,212,-147,-148,-150,-151,-152,-153,-84,-87,-89,-103,-95,-146,-149,-154,-88,-27,-155,]),'MULTI_LINE_COMMENT':([2,3,4,6,7,8,9,10,11,12,61,62,79,137,138,139,140,149,191,192,193,196,197,200,201,202,207,208,209,210,211,212,213,239,240,241,243,244,249,250,251,266,267,270,],[11,11,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,-82,11,-90,-93,213,-83,-85,-86,11,-104,-98,-96,-97,213,-147,-148,-150,-151,-152,-153,-84,-87,-89,-103,-95,-146,-149,-154,-88,-27,-155,]),'BREAK':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,137,138,139,140,191,192,193,196,197,199,200,201,202,208,239,240,241,243,244,249,266,267,],[18,18,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,18,-82,18,-90,-93,-83,-85,-86,18,-104,18,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'CONTINUE':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,137,138,139,140,191,192,193,196,197,199,200,201,202,208,239,240,241,243,244,249,266,267,],[19,19,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,19,-82,19,-90,-93,-83,-85,-86,19,-104,19,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'IF':([2,3,4,6,7,8,9,10,11,12,61,62,79,137,138,139,140,191,192,193,196,197,200,201,202,208,239,240,241,243,244,249,266,267,],[28,28,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,-82,28,-90,-93,-83,-85,-86,28,-104,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'WHILE':([2,3,4,6,7,8,9,10,11,12,61,62,79,137,138,139,140,191,192,193,196,197,200,201,202,208,239,240,241,243,244,249,266,267,],[30,30,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,-82,30,-90,-93,-83,-85,-86,30,-104,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'FUNCTION':([2,3,4,6,7,8,9,10,11,12,37,42,47,48,61,62,79,89,93,106,108,113,116,118,119,120,121,122,137,138,139,140,157,158,161,163,191,192,193,196,197,200,201,202,208,214,215,216,217,219,226,227,230,234,239,240,241,243,244,248,249,262,266,267,],[33,33,-2,-5,-6,-7,-8,-9,-10,-11,109,109,-53,-54,-3,-4,-94,109,109,109,109,109,-45,-46,-47,-48,-49,-50,-82,33,-90,-93,109,109,-45,109,-83,-85,-86,33,-104,-98,-96,-97,-147,33,-156,-157,-158,-129,109,109,109,109,-84,-87,-89,-103,-95,109,-146,109,-88,-27,]),'CLASS':([2,3,4,6,7,8,9,10,11,12,61,62,79,137,138,139,140,191,192,193,196,197,200,201,202,208,239,240,241,243,244,249,266,267,],[36,36,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,-82,36,-90,-93,-83,-85,-86,36,-104,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'FSCANF':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,137,138,139,140,191,192,193,196,197,199,200,201,202,208,239,240,241,243,244,249,266,267,],[38,38,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,38,-82,38,-90,-93,-83,-85,-86,38,-104,38,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'FGETS':([2,3,4,6,7,8,9,10,11,12,37,42,47,48,61,62,79,80,89,93,106,108,113,116,118,119,120,121,122,137,138,139,140,157,158,161,163,191,192,193,196,197,199,200,201,202,208,219,226,227,230,234,239,240,241,243,244,248,249,262,266,267,],[40,40,-2,-5,-6,-7,-8,-9,-10,-11,40,40,-53,-54,-3,-4,-94,40,40,40,40,40,40,-45,-46,-47,-48,-49,-50,-82,40,-90,-93,40,40,-45,40,-83,-85,-86,40,-104,40,-98,-96,-97,-147,-129,40,40,40,40,-84,-87,-89,-103,-95,40,-146,40,-88,-27,]),'NAME':([2,3,4,6,7,8,9,10,11,12,33,36,37,42,47,48,61,62,79,80,89,93,106,108,110,113,116,118,119,120,121,122,132,137,138,139,140,157,158,159,161,163,191,192,193,196,197,199,200,201,202,208,219,226,227,230,234,239,240,241,243,244,248,249,262,266,267,],[34,34,-2,-5,-6,-7,-8,-9,-10,-11,88,92,34,34,-53,-54,-3,-4,-94,34,34,34,34,34,171,34,-45,-46,-47,-48,-49,-50,190,-82,34,-90,-93,34,34,34,-45,34,-83,-85,-86,34,-104,34,-98,-96,-97,-147,-129,34,34,34,34,-84,-87,-89,-103,-95,34,-146,34,-88,-27,]),'RETURN':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,137,138,139,140,191,192,193,196,197,199,200,201,202,208,239,240,241,243,244,249,266,267,],[42,42,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,42,-82,42,-90,-93,-83,-85,-86,42,-104,42,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'UNSET':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,137,138,139,140,191,192,193,196,197,199,200,201,202,208,239,240,241,243,244,249,266,267,],[43,43,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,43,-82,43,-90,-93,-83,-85,-86,43,-104,43,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'COUNT':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,137,138,139,140,191,192,193,196,197,199,200,201,202,208,239,240,241,243,244,249,266,267,],[44,44,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,44,-82,44,-90,-93,-83,-85,-86,44,-104,44,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'FOR':([2,3,4,6,7,8,9,10,11,12,61,62,79,137,138,139,140,191,192,193,196,197,200,201,202,208,239,240,241,243,244,249,266,267,],[46,46,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,-82,46,-90,-93,-83,-85,-86,46,-104,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'PRINT':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,137,138,139,140,191,192,193,196,197,199,200,201,202,208,239,240,241,243,244,249,266,267,],[47,47,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,47,-82,47,-90,-93,-83,-85,-86,47,-104,47,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'ECHO':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,137,138,139,140,191,192,193,196,197,199,200,201,202,208,239,240,241,243,244,249,266,267,],[48,48,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,48,-82,48,-90,-93,-83,-85,-86,48,-104,48,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'ID':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,113,116,118,119,120,121,122,124,125,126,127,128,129,130,131,137,138,139,140,145,150,157,158,161,163,170,187,191,192,193,196,197,199,200,201,202,208,214,215,216,217,219,226,227,230,234,237,238,239,240,241,243,244,247,248,249,262,266,267,273,279,],[49,49,-2,-5,-6,-7,-8,-9,-10,-11,49,49,49,49,-53,-54,49,-3,-4,49,49,49,-117,-118,-119,-120,-121,-122,-123,-124,-125,49,-94,49,49,49,-126,-127,-128,49,49,49,49,49,-45,-46,-47,-48,-49,-50,49,49,49,49,49,49,49,49,-82,49,-90,-93,49,49,49,49,-45,49,49,-92,-83,-85,-86,49,-104,49,-98,-96,-97,-147,49,-156,-157,-158,-129,49,49,49,49,-91,49,-84,-87,-89,-103,-95,49,49,-146,49,-88,-27,49,49,]),'INTEGER':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,113,116,117,118,119,120,121,122,124,127,128,129,130,137,138,139,140,150,157,158,160,161,163,187,191,192,193,196,197,199,200,201,202,208,219,226,227,230,234,235,237,239,240,241,243,244,248,249,262,266,267,],[51,51,-2,-5,-6,-7,-8,-9,-10,-11,51,51,51,51,-53,-54,51,-3,-4,51,51,51,-117,-118,-119,-120,-121,-122,-123,-124,-125,51,-94,51,51,51,-126,-127,-128,51,51,51,169,51,-45,179,-46,-47,-48,-49,-50,51,51,51,51,51,-82,51,-90,-93,51,51,51,179,-45,169,-92,-83,-85,-86,51,-104,51,-98,-96,-97,-147,-129,169,51,51,51,179,-91,-84,-87,-89,-103,-95,51,-146,51,-88,-27,]),'FLOAT':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,113,116,118,119,120,121,122,124,127,128,129,130,137,138,139,140,150,157,158,161,163,187,191,192,193,196,197,199,200,201,202,208,219,226,227,230,234,237,239,240,241,243,244,248,249,262,266,267,],[52,52,-2,-5,-6,-7,-8,-9,-10,-11,52,52,52,52,-53,-54,52,-3,-4,52,52,52,-117,-118,-119,-120,-121,-122,-123,-124,-125,52,-94,52,52,52,-126,-127,-128,52,52,52,52,52,-45,-46,-47,-48,-49,-50,52,52,52,52,52,-82,52,-90,-93,52,52,52,-45,52,-92,-83,-85,-86,52,-104,52,-98,-96,-97,-147,-129,52,52,52,52,-91,-84,-87,-89,-103,-95,52,-146,52,-88,-27,]),'STRING':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,113,116,117,118,119,120,121,122,124,127,128,129,130,137,138,139,140,150,157,158,160,161,163,187,191,192,193,196,197,199,200,201,202,208,219,226,227,230,231,234,235,237,239,240,241,243,244,248,249,262,266,267,],[39,39,-2,-5,-6,-7,-8,-9,-10,-11,39,39,96,96,-53,-54,39,-3,-4,39,39,39,-117,-118,-119,-120,-121,-122,-123,-124,-125,39,-94,39,39,39,-126,-127,-128,96,96,96,168,96,-45,178,-46,-47,-48,-49,-50,39,39,39,39,39,-82,39,-90,-93,39,96,96,178,-45,168,-92,-83,-85,-86,39,-104,39,-98,-96,-97,-147,-129,168,96,96,261,96,178,-91,-84,-87,-89,-103,-95,96,-146,96,-88,-27,]),'LEFT_PAREN':([2,3,4,6,7,8,9,10,11,12,28,30,31,34,35,37,38,40,42,43,44,46,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,88,89,93,106,107,108,109,113,116,118,119,120,121,122,124,127,128,129,130,137,138,139,140,150,157,158,161,163,171,187,191,192,193,195,196,197,199,200,201,202,208,219,226,227,230,234,237,239,240,241,243,244,248,249,262,266,267,],[35,35,-2,-5,-6,-7,-8,-9,-10,-11,76,76,82,89,82,93,111,112,124,125,126,131,-53,-54,82,-3,-4,35,35,35,-117,-118,-119,-120,-121,-122,-123,-124,-125,82,-94,35,82,82,-126,-127,-128,145,124,150,124,163,124,170,124,-45,-46,-47,-48,-49,-50,82,35,35,35,35,-82,35,-90,-93,82,124,124,-45,124,230,-92,-83,-85,-86,76,35,-104,35,-98,-96,-97,-147,-129,124,124,124,124,-91,-84,-87,-89,-103,-95,124,-146,124,-88,-27,]),'TRUE':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,113,116,118,119,120,121,122,124,127,128,129,130,137,138,139,140,150,157,158,161,163,187,191,192,193,196,197,199,200,201,202,208,219,226,227,230,234,237,239,240,241,243,244,248,249,262,266,267,],[56,56,-2,-5,-6,-7,-8,-9,-10,-11,56,56,56,56,-53,-54,56,-3,-4,56,56,56,-117,-118,-119,-120,-121,-122,-123,-124,-125,56,-94,56,56,56,-126,-127,-128,56,56,56,56,56,-45,-46,-47,-48,-49,-50,56,56,56,56,56,-82,56,-90,-93,56,56,56,-45,56,-92,-83,-85,-86,56,-104,56,-98,-96,-97,-147,-129,56,56,56,56,-91,-84,-87,-89,-103,-95,56,-146,56,-88,-27,]),'FALSE':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,113,116,118,119,120,121,122,124,127,128,129,130,137,138,139,140,150,157,158,161,163,187,191,192,193,196,197,199,200,201,202,208,219,226,227,230,234,237,239,240,241,243,244,248,249,262,266,267,],[57,57,-2,-5,-6,-7,-8,-9,-10,-11,57,57,57,57,-53,-54,57,-3,-4,57,57,57,-117,-118,-119,-120,-121,-122,-123,-124,-125,57,-94,57,57,57,-126,-127,-128,57,57,57,57,57,-45,-46,-47,-48,-49,-50,57,57,57,57,57,-82,57,-90,-93,57,57,57,-45,57,-92,-83,-85,-86,57,-104,57,-98,-96,-97,-147,-129,57,57,57,57,-91,-84,-87,-89,-103,-95,57,-146,57,-88,-27,]),'LOGICAL_NOT':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,113,116,118,119,120,121,122,124,127,128,129,130,137,138,139,140,150,157,158,161,163,187,191,192,193,196,197,199,200,201,202,208,219,226,227,230,234,237,239,240,241,243,244,248,249,262,266,267,],[59,59,-2,-5,-6,-7,-8,-9,-10,-11,59,59,59,59,-53,-54,59,-3,-4,59,59,59,-117,-118,-119,-120,-121,-122,-123,-124,-125,59,-94,59,59,59,-126,-127,-128,59,59,59,59,59,-45,-46,-47,-48,-49,-50,59,59,59,59,59,-82,59,-90,-93,59,59,59,-45,59,-92,-83,-85,-86,59,-104,59,-98,-96,-97,-147,-129,59,59,59,59,-91,-84,-87,-89,-103,-95,59,-146,59,-88,-27,]),'CLOSE_TAG':([3,4,6,7,8,9,10,11,12,61,62,79,137,139,140,191,192,193,197,200,201,202,208,239,240,241,243,244,249,266,267,],[60,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,-82,-90,-93,-83,-85,-86,-104,-98,-96,-97,-147,-84,-87,-89,-103,-95,-146,-88,-27,]),'RIGHT_BRACE':([4,6,7,8,9,10,11,12,61,62,79,137,138,139,140,149,191,192,193,196,197,200,201,202,207,208,209,210,211,212,213,239,240,241,243,244,249,250,251,266,267,270,],[-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-94,-82,197,-90,-93,208,-83,-85,-86,243,-104,-98,-96,-97,249,-147,-148,-150,-151,-152,-153,-84,-87,-89,-103,-95,-146,-149,-154,-88,-27,-155,]),'SEMICOLON':([5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,94,95,96,97,98,99,100,101,102,103,104,105,114,115,123,131,133,134,135,136,142,144,147,148,162,174,175,182,183,184,185,186,187,188,190,197,198,206,218,220,221,222,225,232,233,236,237,243,252,253,254,258,259,263,265,271,272,274,278,280,],[62,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-108,80,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,80,-111,-52,-55,-58,-59,-60,-61,-62,-111,-64,-65,-66,-67,-43,-44,-34,187,-113,-69,-70,-116,200,-114,-81,-115,-68,-42,-132,-72,-73,-74,-75,237,-92,-99,-41,-104,200,-35,-51,-56,-57,-63,-134,-36,-141,-145,-91,-103,270,-141,-133,-29,-159,-142,-100,-28,-160,-143,-144,-37,]),'RIGHT_PAREN':([13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,80,81,90,91,94,95,96,97,98,99,100,101,102,103,104,105,114,115,123,133,134,135,136,141,143,144,146,147,148,151,152,153,154,155,156,162,165,166,168,169,170,173,174,175,181,182,183,184,185,190,197,203,204,205,206,218,220,221,222,224,225,228,230,232,233,236,243,245,253,254,255,256,258,259,260,263,268,269,271,272,274,275,276,277,278,280,281,],[-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,142,-111,147,148,-52,-55,-58,-59,-60,-61,-62,-111,-64,-65,-66,-67,-43,-44,-34,-113,-69,-70,-116,198,-101,-114,206,-81,-115,218,219,147,-130,-131,-111,-68,-135,-137,-58,-77,229,232,-42,-132,236,-72,-73,-74,-75,-41,-104,246,-30,-32,-35,-51,-56,-57,-63,254,-134,257,259,-36,-141,-145,-103,-102,-141,-133,-136,-138,-29,-159,272,-142,-31,-33,-28,-160,-143,278,280,-38,-144,-37,-39,]),'COMMA':([13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,81,91,94,95,96,97,98,99,100,101,102,103,104,105,114,115,123,133,134,135,136,141,143,144,146,147,148,151,153,156,162,164,165,166,168,169,172,174,175,182,183,184,185,186,188,190,197,203,204,205,206,218,220,221,222,224,225,228,232,233,236,243,245,253,254,255,256,258,259,260,261,263,265,268,269,271,272,274,276,277,278,280,281,],[-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-111,-79,158,-55,-58,-59,-60,-61,-62,-111,-64,-65,-66,-67,-43,-44,158,-113,-69,-70,-116,199,-101,-114,158,-81,-115,158,-59,-111,-68,226,-135,-137,-58,-77,231,-42,-132,-72,-73,-74,-75,238,-99,-41,-104,247,-30,-32,-35,-51,-56,-57,-63,226,-134,247,-36,-141,-145,-103,-102,-141,-133,-136,-138,-29,-159,158,273,-142,-100,-31,-33,-28,-160,-143,279,-38,-144,-37,-39,]),'PLUS':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[63,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,63,63,-79,-80,63,-111,-79,-69,-70,63,-79,-81,-115,63,-111,-80,-77,-72,-73,-74,-75,-41,]),'MINUS':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[64,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,64,64,-79,-80,64,-111,-79,-69,-70,64,-79,-81,-115,64,-111,-80,-77,-72,-73,-74,-75,-41,]),'EQUAL_TO':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[66,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,66,66,-79,-80,66,-111,-79,-69,-70,66,-79,-81,-115,66,-111,-80,-77,-72,-73,-74,-75,-41,]),'NOT_EQUAL_TO':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[67,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,67,67,-79,-80,67,-111,-79,-69,-70,67,-79,-81,-115,67,-111,-80,-77,-72,-73,-74,-75,-41,]),'LESS_THAN':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[68,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,68,68,-79,-80,68,-111,-79,-69,-70,68,-79,-81,-115,68,-111,-80,-77,-72,-73,-74,-75,-41,]),'GREATER_THAN':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[69,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,69,69,-79,-80,69,-111,-79,-69,-70,69,-79,-81,-115,69,-111,-80,-77,-72,-73,-74,-75,-41,]),'LESS_EQUAL':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[70,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,70,70,-79,-80,70,-111,-79,-69,-70,70,-79,-81,-115,70,-111,-80,-77,-72,-73,-74,-75,-41,]),'GREATER_EQUAL':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[71,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,71,71,-79,-80,71,-111,-79,-69,-70,71,-79,-81,-115,71,-111,-80,-77,-72,-73,-74,-75,-41,]),'IDENTICAL_TO':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[72,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,72,72,-79,-80,72,-111,-79,-69,-70,72,-79,-81,-115,72,-111,-80,-77,-72,-73,-74,-75,-41,]),'NOT_IDENTICAL_TO':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[73,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,73,73,-79,-80,73,-111,-79,-69,-70,73,-79,-81,-115,73,-111,-80,-77,-72,-73,-74,-75,-41,]),'DIFFERENT':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,133,134,135,136,144,147,148,153,156,168,169,182,183,184,185,190,],[74,-108,-79,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,74,74,-79,-80,74,-111,-79,-69,-70,74,-79,-81,-115,74,-111,-80,-77,-72,-73,-74,-75,-41,]),'LOGICAL_AND':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,101,133,134,135,136,144,147,148,156,182,183,184,185,190,],[-108,85,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,85,-111,85,-111,85,-69,-70,-116,85,-81,-115,-111,-72,-73,-74,-75,-41,]),'LOGICAL_OR':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,101,133,134,135,136,144,147,148,156,182,183,184,185,190,],[-108,86,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,86,-111,86,-111,86,-69,-70,-116,86,-81,-115,-111,-72,-73,-74,-75,-41,]),'LOGICAL_XOR':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,101,133,134,135,136,144,147,148,156,182,183,184,185,190,],[-108,87,-80,-111,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,87,-111,87,-111,87,-69,-70,-116,87,-81,-115,-111,-72,-73,-74,-75,-41,]),'TIMES':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,96,101,133,134,135,136,144,147,148,156,168,169,182,183,184,185,190,],[-108,-79,-80,-111,127,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,-79,-80,-111,-79,127,127,-116,-79,-81,-115,-111,-80,-77,-72,-73,-74,-75,-41,]),'DIVIDE':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,96,101,133,134,135,136,144,147,148,156,168,169,182,183,184,185,190,],[-108,-79,-80,-111,128,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,-79,-80,-111,-79,128,128,-116,-79,-81,-115,-111,-80,-77,-72,-73,-74,-75,-41,]),'MOD':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,96,101,133,134,135,136,144,147,148,156,168,169,182,183,184,185,190,],[-108,-79,-80,-111,129,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,-79,-80,-111,-79,129,129,-116,-79,-81,-115,-111,-80,-77,-72,-73,-74,-75,-41,]),'POWER':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,96,101,133,134,135,136,144,147,148,156,168,169,182,183,184,185,190,],[-108,-79,-80,-111,130,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-79,-111,-79,-80,-111,-79,130,130,-116,-79,-81,-115,-111,-80,-77,-72,-73,-74,-75,-41,]),'DOT':([29,32,39,45,49,50,51,52,53,54,55,56,57,58,81,91,94,95,96,97,98,99,100,101,102,103,104,105,114,115,123,133,134,135,136,144,146,147,148,151,153,156,162,174,182,183,184,185,190,197,206,220,221,222,225,232,243,253,254,258,259,260,271,272,],[-108,-79,-80,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-111,-79,157,-55,-58,-59,-60,-61,-62,-111,-64,-65,-66,-67,-43,-44,157,-113,-69,-70,-116,-114,157,-81,-115,157,-59,-111,-68,-42,-72,-73,-74,-75,-41,-104,-35,-56,-57,-63,-134,-36,-103,-141,-133,-29,-159,157,-28,-160,]),'RIGHT_BRACKET':([29,32,39,45,49,50,51,52,53,54,55,56,57,58,81,96,97,98,99,100,101,102,103,104,105,114,115,117,133,134,135,136,144,147,148,162,164,165,166,168,169,174,176,178,179,182,183,184,185,190,197,206,222,223,225,232,243,253,254,255,256,258,259,264,271,272,],[-108,-79,-80,-71,-40,-76,-77,-78,-105,-106,-107,-109,-110,-112,-111,-58,-59,-60,-61,-62,-111,-64,-65,-66,-67,-43,-44,177,-113,-69,-70,-116,-114,-81,-115,-68,225,-135,-137,-58,-77,-42,233,-139,-140,-72,-73,-74,-75,-41,-104,-35,-63,253,-134,-36,-103,-141,-133,-136,-138,-29,-159,275,-28,-160,]),'ARRAY':([37,42,47,48,89,93,106,108,113,116,118,119,120,121,122,157,158,161,163,219,226,227,230,234,248,262,],[107,107,-53,-54,107,107,107,107,107,107,-46,-47,-48,-49,-50,107,107,-45,107,-129,107,107,107,107,107,107,]),'LEFT_BRACKET':([37,41,42,47,48,49,89,93,101,106,108,113,116,118,119,120,121,122,156,157,158,161,163,180,190,219,226,227,230,234,248,262,],[108,117,108,-53,-54,-40,108,108,160,108,108,108,108,-46,-47,-48,-49,-50,160,108,108,-45,108,235,-41,-129,108,108,108,108,108,108,]),'NEW':([37,42,47,48,89,93,106,108,113,116,118,119,120,121,122,157,158,161,163,219,226,227,230,234,248,262,],[110,110,-53,-54,110,110,110,110,110,-45,-46,-47,-48,-49,-50,110,110,-45,110,-129,110,110,110,110,110,110,]),'PLUS_PLUS':([41,49,101,156,189,190,],[114,-40,114,114,114,-41,]),'MINUS_MINUS':([41,49,101,156,189,190,],[115,-40,115,115,115,-41,]),'EQUALS':([41,49,101,156,177,189,190,205,233,],[116,-40,161,161,234,161,-41,248,262,]),'PLUS_EQUALS':([41,49,101,156,189,190,],[118,-40,118,118,118,-41,]),'MINUS_EQUALS':([41,49,101,156,189,190,],[119,-40,119,119,119,-41,]),'TIMES_EQUALS':([41,49,101,156,189,190,],[120,-40,120,120,120,-41,]),'DIVIDE_EQUALS':([41,49,101,156,189,190,],[121,-40,121,121,121,-41,]),'MOD_EQUALS':([41,49,101,156,189,190,],[122,-40,122,122,122,-41,]),'CALL':([49,101,156,190,],[132,159,159,-41,]),'LEFT_BRACE':([75,77,92,142,148,194,198,229,242,246,257,],[138,138,149,138,-115,138,138,138,138,138,138,]),'INT_TYPE':([93,124,150,],[154,154,154,]),'FLOAT_TYPE':([93,124,150,],[155,155,155,]),'STDIN':([111,112,],[172,173,]),'ELSE':([137,191,193,197,240,243,266,],[194,194,-86,-104,-87,-103,-88,]),'ELSEIF':([137,191,193,197,240,243,266,],[195,195,-86,-104,-87,-103,-88,]),'PUBLIC':([149,197,207,209,210,211,212,213,243,250,251,267,270,],[215,-104,215,-148,-150,-151,-152,-153,-103,-149,-154,-27,-155,]),'PRIVATE':([149,197,207,209,210,211,212,213,243,250,251,267,270,],[216,-104,216,-148,-150,-151,-152,-153,-103,-149,-154,-27,-155,]),'PROTECTED':([149,197,207,209,210,211,212,213,243,250,251,267,270,],[217,-104,217,-148,-150,-151,-152,-153,-103,-149,-154,-27,-155,]),'KEY_VALUE':([167,168,169,],[227,-139,-140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([2,138,],[3,196,]),'statement2':([2,3,138,196,],[4,61,4,61,]),'statement':([2,3,80,138,196,199,],[5,5,143,5,5,245,]),'if_statement':([2,3,138,196,],[6,6,6,6,]),'while_statement':([2,3,138,196,],[7,7,7,7,]),'for_statement':([2,3,138,196,],[8,8,8,8,]),'function_statement':([2,3,138,196,214,],[9,9,9,9,251,]),'class_declaration':([2,3,138,196,],[12,12,12,12,]),'print_statement':([2,3,80,138,196,199,],[13,13,13,13,13,13,]),'fscanf_statement':([2,3,80,138,196,199,],[14,14,14,14,14,14,]),'fgets_statement':([2,3,37,42,80,89,93,106,108,113,138,157,158,163,196,199,226,227,230,234,248,262,],[15,15,104,104,15,104,104,104,104,104,15,104,104,104,15,15,104,104,104,104,104,104,]),'assignment_statement':([2,3,37,42,80,89,93,106,108,113,131,138,157,158,163,196,199,226,227,230,234,238,248,262,],[16,16,103,103,16,103,103,103,103,103,188,16,103,103,103,16,16,103,103,103,103,265,103,103,]),'array_declaration_statement':([2,3,80,138,196,199,],[17,17,17,17,17,17,]),'function_call':([2,3,37,42,80,89,93,106,108,113,138,157,158,159,163,196,199,226,227,230,234,248,262,],[20,20,100,100,20,100,100,100,100,100,20,100,100,222,100,20,20,100,100,100,100,100,100,]),'return_statement':([2,3,80,138,196,199,],[21,21,21,21,21,21,]),'array_indexing':([2,3,37,42,80,89,93,106,108,113,138,157,158,163,196,199,226,227,230,234,248,262,],[22,22,99,99,22,99,99,99,99,99,22,99,99,99,22,22,99,99,99,99,99,99,]),'array_add_element':([2,3,80,138,196,199,],[23,23,23,23,23,23,]),'array_modify_element':([2,3,80,138,196,199,],[24,24,24,24,24,24,]),'array_remove_element':([2,3,80,138,196,199,],[25,25,25,25,25,25,]),'array_count_elements':([2,3,80,138,196,199,],[26,26,26,26,26,26,]),'expression':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,196,199,226,227,230,234,248,262,],[27,27,83,90,97,97,83,83,83,136,83,27,90,83,97,153,97,97,97,90,83,83,83,83,27,90,97,97,97,27,27,97,97,97,97,97,97,]),'parenthesized_condition':([2,3,28,30,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,195,196,199,226,227,230,234,248,262,],[29,29,75,77,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,242,29,29,29,29,29,29,29,29,]),'for_part1':([2,3,138,196,],[31,31,31,31,]),'condition':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,196,199,226,227,230,234,248,262,],[32,32,78,91,32,32,133,32,32,32,91,32,91,144,32,91,32,32,32,91,32,32,32,32,32,91,32,32,32,32,32,32,32,32,32,32,32,]),'print_function':([2,3,80,138,196,199,],[37,37,37,37,37,37,]),'variable':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,125,126,127,128,129,130,131,138,145,150,157,158,163,170,196,199,214,226,227,230,234,238,247,248,262,273,279,],[41,41,81,81,101,101,81,81,81,81,81,41,81,81,101,156,101,101,101,81,180,181,81,81,81,81,189,41,205,81,101,101,101,205,41,41,252,101,101,101,101,189,205,101,101,277,281,]),'term':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,196,199,226,227,230,234,248,262,],[45,45,45,45,45,45,45,134,135,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'factor':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,196,199,226,227,230,234,248,262,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,182,183,184,185,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'simple_condition':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,196,199,226,227,230,234,248,262,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'negated_condition':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,196,199,226,227,230,234,248,262,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'complex_condition':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,196,199,226,227,230,234,248,262,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'relational_expression':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,113,124,127,128,129,130,138,150,157,158,163,196,199,226,227,230,234,248,262,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'relational_operator':([27,83,90,97,136,153,],[65,65,65,65,65,65,]),'for_part3':([31,78,],[79,140,]),'logical_operator':([32,78,91,133,144,],[84,84,84,84,84,]),'arguments':([37,42,89,93,230,],[94,123,146,151,260,]),'argument':([37,42,89,93,106,108,113,157,158,163,226,227,230,234,248,262,],[95,95,95,95,162,166,174,220,221,166,166,256,95,263,269,274,]),'array':([37,42,89,93,106,108,113,116,157,158,163,226,227,230,234,248,262,],[98,98,98,98,98,98,98,175,98,98,98,98,98,98,98,98,98,]),'anonymous_function':([37,42,89,93,106,108,113,157,158,163,226,227,230,234,248,262,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'object_creation':([37,42,89,93,106,108,113,157,158,163,226,227,230,234,248,262,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'casting':([37,42,89,93,106,108,113,157,158,163,226,227,230,234,248,262,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'assignment_operator':([41,101,156,189,],[113,113,113,113,]),'block':([75,77,142,194,198,229,242,246,257,],[137,139,202,241,202,258,266,267,271,]),'statement_list':([80,],[141,]),'casting_type':([93,124,150,],[152,152,152,]),'array_elements':([108,163,],[164,224,]),'array_argument':([108,163,226,],[165,165,255,]),'clave':([108,117,160,163,226,235,],[167,176,223,167,167,264,]),'assignment_list':([131,],[186,]),'else_if_extended':([137,],[191,]),'if_part3':([137,191,],[192,239,]),'if_part2':([137,191,],[193,240,]),'for_part4':([142,198,],[201,244,]),'parameters':([145,170,],[203,228,]),'parameter':([145,170,247,],[204,204,268,]),'class_statements':([149,],[207,]),'class_statement':([149,207,],[209,250,]),'method_declaration':([149,207,],[210,210,]),'property_declaration':([149,207,],[211,211,]),'visibility_operator':([149,207,],[214,214,]),'variable_list':([273,],[276,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPEN_TAG statements CLOSE_TAG','program',3,'p_program','parserPHP.py',30),
  ('statements -> statement2','statements',1,'p_statements','parserPHP.py',35),
  ('statements -> statements statement2','statements',2,'p_statements','parserPHP.py',36),
  ('statement2 -> statement SEMICOLON','statement2',2,'p_statement2','parserPHP.py',44),
  ('statement2 -> if_statement','statement2',1,'p_statement2','parserPHP.py',45),
  ('statement2 -> while_statement','statement2',1,'p_statement2','parserPHP.py',46),
  ('statement2 -> for_statement','statement2',1,'p_statement2','parserPHP.py',47),
  ('statement2 -> function_statement','statement2',1,'p_statement2','parserPHP.py',48),
  ('statement2 -> ONE_LINE_COMMENT','statement2',1,'p_statement2','parserPHP.py',49),
  ('statement2 -> MULTI_LINE_COMMENT','statement2',1,'p_statement2','parserPHP.py',50),
  ('statement2 -> class_declaration','statement2',1,'p_statement2','parserPHP.py',51),
  ('statement -> print_statement','statement',1,'p_statement','parserPHP.py',55),
  ('statement -> fscanf_statement','statement',1,'p_statement','parserPHP.py',56),
  ('statement -> fgets_statement','statement',1,'p_statement','parserPHP.py',57),
  ('statement -> assignment_statement','statement',1,'p_statement','parserPHP.py',58),
  ('statement -> array_declaration_statement','statement',1,'p_statement','parserPHP.py',59),
  ('statement -> BREAK','statement',1,'p_statement','parserPHP.py',60),
  ('statement -> CONTINUE','statement',1,'p_statement','parserPHP.py',61),
  ('statement -> function_call','statement',1,'p_statement','parserPHP.py',62),
  ('statement -> return_statement','statement',1,'p_statement','parserPHP.py',63),
  ('statement -> array_indexing','statement',1,'p_statement','parserPHP.py',64),
  ('statement -> array_add_element','statement',1,'p_statement','parserPHP.py',65),
  ('statement -> array_modify_element','statement',1,'p_statement','parserPHP.py',66),
  ('statement -> array_remove_element','statement',1,'p_statement','parserPHP.py',67),
  ('statement -> array_count_elements','statement',1,'p_statement','parserPHP.py',68),
  ('statement -> expression','statement',1,'p_statement','parserPHP.py',69),
  ('function_statement -> FUNCTION NAME LEFT_PAREN parameters RIGHT_PAREN block','function_statement',6,'p_function_statement','parserPHP.py',105),
  ('anonymous_function -> FUNCTION LEFT_PAREN parameters RIGHT_PAREN block','anonymous_function',5,'p_anonymous_function','parserPHP.py',116),
  ('anonymous_function -> FUNCTION LEFT_PAREN RIGHT_PAREN block','anonymous_function',4,'p_anonymous_function','parserPHP.py',117),
  ('parameters -> parameter','parameters',1,'p_parameters','parserPHP.py',124),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','parserPHP.py',125),
  ('parameter -> variable','parameter',1,'p_parameter','parserPHP.py',133),
  ('parameter -> variable EQUALS argument','parameter',3,'p_parameter','parserPHP.py',134),
  ('return_statement -> RETURN arguments','return_statement',2,'p_return_statement','parserPHP.py',145),
  ('function_call -> NAME LEFT_PAREN arguments RIGHT_PAREN','function_call',4,'p_function_call','parserPHP.py',150),
  ('fgets_statement -> FGETS LEFT_PAREN STDIN RIGHT_PAREN','fgets_statement',4,'p_fgets_statement','parserPHP.py',160),
  ('fscanf_statement -> FSCANF LEFT_PAREN STDIN COMMA STRING COMMA variable_list RIGHT_PAREN','fscanf_statement',8,'p_fscanf_statement','parserPHP.py',165),
  ('variable_list -> variable','variable_list',1,'p_variable_list','parserPHP.py',169),
  ('variable_list -> variable_list COMMA variable','variable_list',3,'p_variable_list','parserPHP.py',170),
  ('variable -> ID','variable',1,'p_variable','parserPHP.py',179),
  ('variable -> ID CALL NAME','variable',3,'p_variable','parserPHP.py',180),
  ('assignment_statement -> variable assignment_operator argument','assignment_statement',3,'p_assignment_statement','parserPHP.py',188),
  ('assignment_statement -> variable PLUS_PLUS','assignment_statement',2,'p_assignment_statement','parserPHP.py',189),
  ('assignment_statement -> variable MINUS_MINUS','assignment_statement',2,'p_assignment_statement','parserPHP.py',190),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',237),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',238),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',239),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',240),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',241),
  ('assignment_operator -> MOD_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',242),
  ('print_statement -> print_function LEFT_PAREN arguments RIGHT_PAREN','print_statement',4,'p_print_statement','parserPHP.py',247),
  ('print_statement -> print_function arguments','print_statement',2,'p_print_statement','parserPHP.py',248),
  ('print_function -> PRINT','print_function',1,'p_print_function','parserPHP.py',255),
  ('print_function -> ECHO','print_function',1,'p_print_function','parserPHP.py',256),
  ('arguments -> argument','arguments',1,'p_arguments','parserPHP.py',260),
  ('arguments -> arguments DOT argument','arguments',3,'p_arguments','parserPHP.py',261),
  ('arguments -> arguments COMMA argument','arguments',3,'p_arguments','parserPHP.py',262),
  ('argument -> STRING','argument',1,'p_argument','parserPHP.py',270),
  ('argument -> expression','argument',1,'p_argument','parserPHP.py',271),
  ('argument -> array','argument',1,'p_argument','parserPHP.py',272),
  ('argument -> array_indexing','argument',1,'p_argument','parserPHP.py',273),
  ('argument -> function_call','argument',1,'p_argument','parserPHP.py',274),
  ('argument -> variable CALL function_call','argument',3,'p_argument','parserPHP.py',275),
  ('argument -> anonymous_function','argument',1,'p_argument','parserPHP.py',276),
  ('argument -> assignment_statement','argument',1,'p_argument','parserPHP.py',277),
  ('argument -> fgets_statement','argument',1,'p_argument','parserPHP.py',278),
  ('argument -> object_creation','argument',1,'p_argument','parserPHP.py',279),
  ('argument -> casting argument','argument',2,'p_argument','parserPHP.py',280),
  ('expression -> expression PLUS term','expression',3,'p_expression_arithmetic','parserPHP.py',290),
  ('expression -> expression MINUS term','expression',3,'p_expression_arithmetic','parserPHP.py',291),
  ('expression -> term','expression',1,'p_expression_arithmetic','parserPHP.py',292),
  ('term -> term TIMES factor','term',3,'p_term','parserPHP.py',300),
  ('term -> term DIVIDE factor','term',3,'p_term','parserPHP.py',301),
  ('term -> term MOD factor','term',3,'p_term','parserPHP.py',302),
  ('term -> term POWER factor','term',3,'p_term','parserPHP.py',303),
  ('term -> factor','term',1,'p_term','parserPHP.py',304),
  ('factor -> INTEGER','factor',1,'p_factor','parserPHP.py',311),
  ('factor -> FLOAT','factor',1,'p_factor','parserPHP.py',312),
  ('factor -> condition','factor',1,'p_factor','parserPHP.py',313),
  ('factor -> STRING','factor',1,'p_factor','parserPHP.py',314),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','parserPHP.py',315),
  ('if_statement -> IF parenthesized_condition block','if_statement',3,'p_if_statement','parserPHP.py',346),
  ('if_statement -> IF parenthesized_condition block else_if_extended','if_statement',4,'p_if_statement','parserPHP.py',347),
  ('if_statement -> IF parenthesized_condition block else_if_extended if_part3','if_statement',5,'p_if_statement','parserPHP.py',348),
  ('if_statement -> IF parenthesized_condition block if_part3','if_statement',4,'p_if_statement','parserPHP.py',349),
  ('else_if_extended -> if_part2','else_if_extended',1,'p_else_if_extended','parserPHP.py',358),
  ('else_if_extended -> else_if_extended if_part2','else_if_extended',2,'p_else_if_extended','parserPHP.py',359),
  ('if_part2 -> ELSEIF parenthesized_condition block','if_part2',3,'p_else_if_statement','parserPHP.py',367),
  ('if_part3 -> ELSE block','if_part3',2,'p_else_statement','parserPHP.py',371),
  ('while_statement -> WHILE parenthesized_condition block','while_statement',3,'p_while_statement','parserPHP.py',376),
  ('for_part1 -> FOR LEFT_PAREN assignment_list SEMICOLON','for_part1',4,'p_for_part1','parserPHP.py',381),
  ('for_part1 -> FOR LEFT_PAREN SEMICOLON','for_part1',3,'p_for_part1','parserPHP.py',382),
  ('for_statement -> for_part1 condition for_part3','for_statement',3,'p_for_part2','parserPHP.py',389),
  ('for_statement -> for_part1 for_part3','for_statement',2,'p_for_part2','parserPHP.py',390),
  ('for_part3 -> SEMICOLON statement_list RIGHT_PAREN for_part4','for_part3',4,'p_for_part3','parserPHP.py',397),
  ('for_part3 -> SEMICOLON RIGHT_PAREN for_part4','for_part3',3,'p_for_part3','parserPHP.py',398),
  ('for_part4 -> block','for_part4',1,'p_for_part4','parserPHP.py',405),
  ('for_part4 -> SEMICOLON','for_part4',1,'p_for_part4','parserPHP.py',406),
  ('assignment_list -> assignment_statement','assignment_list',1,'p_assignment_list','parserPHP.py',410),
  ('assignment_list -> assignment_list COMMA assignment_statement','assignment_list',3,'p_assignment_list','parserPHP.py',411),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parserPHP.py',419),
  ('statement_list -> statement_list COMMA statement','statement_list',3,'p_statement_list','parserPHP.py',420),
  ('block -> LEFT_BRACE statements RIGHT_BRACE','block',3,'p_block','parserPHP.py',429),
  ('block -> LEFT_BRACE RIGHT_BRACE','block',2,'p_block','parserPHP.py',430),
  ('condition -> simple_condition','condition',1,'p_condition','parserPHP.py',438),
  ('condition -> negated_condition','condition',1,'p_condition','parserPHP.py',439),
  ('condition -> complex_condition','condition',1,'p_condition','parserPHP.py',440),
  ('condition -> parenthesized_condition','condition',1,'p_condition','parserPHP.py',441),
  ('simple_condition -> TRUE','simple_condition',1,'p_simple_condition','parserPHP.py',445),
  ('simple_condition -> FALSE','simple_condition',1,'p_simple_condition','parserPHP.py',446),
  ('simple_condition -> variable','simple_condition',1,'p_simple_condition','parserPHP.py',447),
  ('simple_condition -> relational_expression','simple_condition',1,'p_simple_condition','parserPHP.py',448),
  ('negated_condition -> LOGICAL_NOT condition','negated_condition',2,'p_negated_condition','parserPHP.py',452),
  ('complex_condition -> condition logical_operator condition','complex_condition',3,'p_complex_condition','parserPHP.py',456),
  ('parenthesized_condition -> LEFT_PAREN condition RIGHT_PAREN','parenthesized_condition',3,'p_parenthesized_condition','parserPHP.py',460),
  ('relational_expression -> expression relational_operator expression','relational_expression',3,'p_relational_expression','parserPHP.py',464),
  ('relational_operator -> EQUAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',468),
  ('relational_operator -> NOT_EQUAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',469),
  ('relational_operator -> LESS_THAN','relational_operator',1,'p_relational_operator','parserPHP.py',470),
  ('relational_operator -> GREATER_THAN','relational_operator',1,'p_relational_operator','parserPHP.py',471),
  ('relational_operator -> LESS_EQUAL','relational_operator',1,'p_relational_operator','parserPHP.py',472),
  ('relational_operator -> GREATER_EQUAL','relational_operator',1,'p_relational_operator','parserPHP.py',473),
  ('relational_operator -> IDENTICAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',474),
  ('relational_operator -> NOT_IDENTICAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',475),
  ('relational_operator -> DIFFERENT','relational_operator',1,'p_relational_operator','parserPHP.py',476),
  ('logical_operator -> LOGICAL_AND','logical_operator',1,'p_logical_operator','parserPHP.py',480),
  ('logical_operator -> LOGICAL_OR','logical_operator',1,'p_logical_operator','parserPHP.py',481),
  ('logical_operator -> LOGICAL_XOR','logical_operator',1,'p_logical_operator','parserPHP.py',482),
  ('casting -> LEFT_PAREN casting_type RIGHT_PAREN','casting',3,'p_casting','parserPHP.py',487),
  ('casting_type -> INT_TYPE','casting_type',1,'p_casting_type','parserPHP.py',491),
  ('casting_type -> FLOAT_TYPE','casting_type',1,'p_casting_type','parserPHP.py',492),
  ('array_declaration_statement -> variable EQUALS array','array_declaration_statement',3,'p_array_declaration_statement','parserPHP.py',497),
  ('array -> ARRAY LEFT_PAREN array_elements RIGHT_PAREN','array',4,'p_array','parserPHP.py',502),
  ('array -> LEFT_BRACKET array_elements RIGHT_BRACKET','array',3,'p_array','parserPHP.py',503),
  ('array_elements -> array_argument','array_elements',1,'p_array_elements','parserPHP.py',510),
  ('array_elements -> array_elements COMMA array_argument','array_elements',3,'p_array_elements','parserPHP.py',511),
  ('array_argument -> argument','array_argument',1,'p_array_argument','parserPHP.py',520),
  ('array_argument -> clave KEY_VALUE argument','array_argument',3,'p_array_argument','parserPHP.py',521),
  ('clave -> STRING','clave',1,'p_clave','parserPHP.py',528),
  ('clave -> INTEGER','clave',1,'p_clave','parserPHP.py',529),
  ('array_indexing -> variable LEFT_BRACKET clave RIGHT_BRACKET','array_indexing',4,'p_array_indexing','parserPHP.py',544),
  ('array_add_element -> variable LEFT_BRACKET RIGHT_BRACKET EQUALS argument','array_add_element',5,'p_array_add_element','parserPHP.py',550),
  ('array_modify_element -> variable LEFT_BRACKET clave RIGHT_BRACKET EQUALS argument','array_modify_element',6,'p_array_modify_element','parserPHP.py',556),
  ('array_remove_element -> UNSET LEFT_PAREN variable LEFT_BRACKET clave RIGHT_BRACKET RIGHT_PAREN','array_remove_element',7,'p_array_remove_element','parserPHP.py',562),
  ('array_count_elements -> COUNT LEFT_PAREN variable RIGHT_PAREN','array_count_elements',4,'p_array_count_elements','parserPHP.py',568),
  ('class_declaration -> CLASS NAME LEFT_BRACE class_statements RIGHT_BRACE','class_declaration',5,'p_class_declaration','parserPHP.py',575),
  ('class_declaration -> CLASS NAME LEFT_BRACE RIGHT_BRACE','class_declaration',4,'p_class_declaration','parserPHP.py',576),
  ('class_statements -> class_statement','class_statements',1,'p_class_statements','parserPHP.py',583),
  ('class_statements -> class_statements class_statement','class_statements',2,'p_class_statements','parserPHP.py',584),
  ('class_statement -> method_declaration','class_statement',1,'p_class_statement','parserPHP.py',592),
  ('class_statement -> property_declaration','class_statement',1,'p_class_statement','parserPHP.py',593),
  ('class_statement -> ONE_LINE_COMMENT','class_statement',1,'p_class_statement','parserPHP.py',594),
  ('class_statement -> MULTI_LINE_COMMENT','class_statement',1,'p_class_statement','parserPHP.py',595),
  ('method_declaration -> visibility_operator function_statement','method_declaration',2,'p_method_declaration','parserPHP.py',599),
  ('property_declaration -> visibility_operator variable SEMICOLON','property_declaration',3,'p_property_declaration','parserPHP.py',603),
  ('visibility_operator -> PUBLIC','visibility_operator',1,'p_visibility_operator','parserPHP.py',607),
  ('visibility_operator -> PRIVATE','visibility_operator',1,'p_visibility_operator','parserPHP.py',608),
  ('visibility_operator -> PROTECTED','visibility_operator',1,'p_visibility_operator','parserPHP.py',609),
  ('object_creation -> NEW NAME LEFT_PAREN RIGHT_PAREN','object_creation',4,'p_object_creation','parserPHP.py',613),
  ('object_creation -> NEW NAME LEFT_PAREN arguments RIGHT_PAREN','object_creation',5,'p_object_creation','parserPHP.py',614),
]
