
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ARRAY AS ASYNC AWAIT BOOL BREAK CALL CALLABLE CASE CATCH CLASS CLONE CLOSE_TAG COLON COMMA CONST CONTINUE COUNT DECLARE DEFAULT DIE DIFFERENT DIVIDE DIVIDE_EQUALS DO DOT ECHO ELSE ELSEIF EMPTY ENDDECLARE ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE ENUM EQUALS EQUAL_TO EVAL EXIT EXTENDS FALSE FGETS FINAL FINALLY FLOAT FLOAT_TYPE FN FOR FOREACH FSCANF FUNCTION GLOBAL GOTO GREATER_EQUAL GREATER_THAN HALT_COMPILER ID IDENTICAL_TO IF IMPLEMENTS INCLUDE INCLUDE_ONCE INSTANCEOF INSTEADOF INTEGER INTERFACE INT_TYPE ISSET ITERABLE KEY_VALUE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LESS_EQUAL LESS_THAN LIST LOGICAL_AND LOGICAL_NOT LOGICAL_OR LOGICAL_XOR LPAREN MATCH MINUS MINUS_EQUALS MINUS_MINUS MIXED MOD MOD_EQUALS MULTI_LINE_COMMENT NAME NAMESPACE NEW NOT_EQUAL_TO NOT_IDENTICAL_TO NULL OBJECT ONE_LINE_COMMENT OPEN_TAG PLUS PLUS_EQUALS PLUS_PLUS POWER PRINT PRIVATE PROTECTED PUBLIC REQUIRE REQUIRE_ONCE RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN RPAREN SELF SEMICOLON STATIC STDIN STRING SWITCH THROW TIMES TIMES_EQUALS TRAIT TRUE TRY UNSET USE VAR VOID WHILE YIELD YIELD_FROMprogram : OPEN_TAG statements CLOSE_TAGstatements : statement2\n                  | statements statement2statement2 : statement SEMICOLON\n                  | if_statement\n                  | while_statement\n                  | for_statement\n                  | function_statement\n                  | ONE_LINE_COMMENT\n                  | MULTI_LINE_COMMENT\n                  | class_declarationstatement : print_statement\n                 | fscanf_statement\n                 | fgets_statement\n                 | assignment_statement\n                 | array_declaration_statement\n                 | BREAK\n                 | CONTINUE\n                 | function_call\n                 | return_statement\n                 | array_indexing\n                 | array_add_element\n                 | array_modify_element\n                 | array_remove_element\n                 | array_count_elements\n                 | expressionfunction_statement : FUNCTION NAME LEFT_PAREN parameters RIGHT_PAREN block\n                          | FUNCTION NAME LEFT_PAREN RIGHT_PAREN blockanonymous_function : FUNCTION LEFT_PAREN parameters RIGHT_PAREN block\n                          | FUNCTION LEFT_PAREN RIGHT_PAREN blockparameters : parameter\n                  | parameters COMMA parameterparameter : variable\n                 | variable EQUALS argumentreturn_statement : RETURN argumentsfunction_call : NAME LEFT_PAREN arguments RIGHT_PAREN\n                     | NAME LEFT_PAREN RIGHT_PARENfgets_statement : FGETS LEFT_PAREN STDIN RIGHT_PARENfscanf_statement : FSCANF LEFT_PAREN STDIN COMMA STRING COMMA variable_list RIGHT_PARENvariable_list : variable\n                     | variable_list COMMA variablevariable : ID\n                | ID CALL NAMEassignment_statement : variable assignment_operator argument\n                            | variable PLUS_PLUS\n                            | variable MINUS_MINUSassignment_operator : EQUALS\n                           | PLUS_EQUALS\n                           | MINUS_EQUALS\n                           | TIMES_EQUALS\n                           | DIVIDE_EQUALS\n                           | MOD_EQUALSprint_statement : print_function LEFT_PAREN arguments RIGHT_PAREN\n                       | print_function argumentsprint_function : PRINT\n                      | ECHOarguments : argument\n                 | arguments DOT argument\n                 | arguments COMMA argumentargument : STRING                \n                | expression\n                | array\n                | array_indexing\n                | function_call\n                | ID CALL function_call\n                | anonymous_function\n                | assignment_statement\n                | fgets_statement\n                | object_creation\n                | casting argumentexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | term POWER factor\n            | factorfactor : INTEGER\n              | FLOAT\n              | condition\n              | STRING\n              | LEFT_PAREN expression RIGHT_PARENif_statement : IF parenthesized_condition block\n                    | IF parenthesized_condition block else_if_extended\n                    | IF parenthesized_condition block else_if_extended if_part3\n                    | IF parenthesized_condition block if_part3else_if_extended : if_part2\n                        | else_if_extended if_part2if_part2 : ELSEIF parenthesized_condition blockif_part3 : ELSE blockwhile_statement : WHILE parenthesized_condition blockfor_part1 : FOR LEFT_PAREN assignment_list SEMICOLON\n                 | FOR LEFT_PAREN SEMICOLONfor_statement : for_part1 condition for_part3\n                     | for_part1 for_part3for_part3 : SEMICOLON statement_list RIGHT_PAREN for_part4\n                 | SEMICOLON RIGHT_PAREN for_part4for_part4 : block\n                 | SEMICOLONassignment_list : assignment_statement\n                       | assignment_list COMMA assignment_statementstatement_list : statement\n                      | statement_list COMMA statementblock : LEFT_BRACE statements RIGHT_BRACE\n             | LEFT_BRACE RIGHT_BRACEcondition : simple_condition\n                 | negated_condition\n                 | complex_condition\n                 | parenthesized_conditionsimple_condition : TRUE\n                        | FALSE\n                        | variable\n                        | relational_expressionnegated_condition : LOGICAL_NOT conditioncomplex_condition : condition logical_operator conditionparenthesized_condition : LEFT_PAREN condition RIGHT_PARENrelational_expression : expression relational_operator expressionrelational_operator : EQUAL_TO\n                           | NOT_EQUAL_TO\n                           | LESS_THAN\n                           | GREATER_THAN\n                           | LESS_EQUAL\n                           | GREATER_EQUAL\n                           | IDENTICAL_TO\n                           | NOT_IDENTICAL_TO\n                           | DIFFERENTlogical_operator : LOGICAL_AND\n                        | LOGICAL_OR\n                        | LOGICAL_XORcasting : LEFT_PAREN casting_type RIGHT_PARENcasting_type : INT_TYPE\n                    | FLOAT_TYPEarray_declaration_statement : variable EQUALS arrayarray : ARRAY LEFT_PAREN array_elements RIGHT_PAREN\n             | LEFT_BRACKET array_elements RIGHT_BRACKETarray_elements : array_argument\n                      | array_elements COMMA array_argumentarray_argument : argument\n                      | clave KEY_VALUE argumentclave : STRING\n             | INTEGERarray_indexing : variable LEFT_BRACKET clave RIGHT_BRACKETarray_add_element : variable LEFT_BRACKET RIGHT_BRACKET EQUALS argumentarray_modify_element : variable LEFT_BRACKET clave RIGHT_BRACKET EQUALS argumentarray_remove_element : UNSET LEFT_PAREN variable LEFT_BRACKET clave RIGHT_BRACKET RIGHT_PARENarray_count_elements : COUNT LEFT_PAREN variable RIGHT_PARENclass_declaration : CLASS NAME LEFT_BRACE class_statements RIGHT_BRACE\n                         | CLASS NAME LEFT_BRACE RIGHT_BRACEclass_statements : class_statement\n                        | class_statements class_statementclass_statement : method_declaration\n                       | property_declaration\n                       | ONE_LINE_COMMENT\n                       | MULTI_LINE_COMMENTmethod_declaration : visibility_operator function_statementproperty_declaration : visibility_operator variable SEMICOLONvisibility_operator : PUBLIC\n                           | PRIVATE\n                           | PROTECTEDobject_creation : NEW NAME LEFT_PAREN RIGHT_PAREN\n                       | NEW NAME LEFT_PAREN arguments RIGHT_PAREN'
    
_lr_action_items = {'OPEN_TAG':([0,],[2,]),'$end':([1,60,],[0,-1,]),'ONE_LINE_COMMENT':([2,3,4,6,7,8,9,10,11,12,61,62,79,138,139,140,141,151,193,194,195,198,199,202,203,204,210,211,212,213,214,215,216,243,244,245,247,248,252,254,255,256,271,272,275,],[10,10,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,-84,10,-92,-95,215,-85,-87,-88,10,-106,-100,-98,-99,215,-149,-150,-152,-153,-154,-155,-86,-89,-91,-105,-97,-28,-148,-151,-156,-90,-27,-157,]),'MULTI_LINE_COMMENT':([2,3,4,6,7,8,9,10,11,12,61,62,79,138,139,140,141,151,193,194,195,198,199,202,203,204,210,211,212,213,214,215,216,243,244,245,247,248,252,254,255,256,271,272,275,],[11,11,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,-84,11,-92,-95,216,-85,-87,-88,11,-106,-100,-98,-99,216,-149,-150,-152,-153,-154,-155,-86,-89,-91,-105,-97,-28,-148,-151,-156,-90,-27,-157,]),'BREAK':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,138,139,140,141,193,194,195,198,199,201,202,203,204,211,243,244,245,247,248,252,254,271,272,],[18,18,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,18,-84,18,-92,-95,-85,-87,-88,18,-106,18,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'CONTINUE':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,138,139,140,141,193,194,195,198,199,201,202,203,204,211,243,244,245,247,248,252,254,271,272,],[19,19,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,19,-84,19,-92,-95,-85,-87,-88,19,-106,19,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'IF':([2,3,4,6,7,8,9,10,11,12,61,62,79,138,139,140,141,193,194,195,198,199,202,203,204,211,243,244,245,247,248,252,254,271,272,],[28,28,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,-84,28,-92,-95,-85,-87,-88,28,-106,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'WHILE':([2,3,4,6,7,8,9,10,11,12,61,62,79,138,139,140,141,193,194,195,198,199,202,203,204,211,243,244,245,247,248,252,254,271,272,],[30,30,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,-84,30,-92,-95,-85,-87,-88,30,-106,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'FUNCTION':([2,3,4,6,7,8,9,10,11,12,37,42,47,48,61,62,79,89,93,106,108,114,117,119,120,121,122,123,138,139,140,141,159,160,163,171,193,194,195,198,199,202,203,204,211,217,218,219,220,222,229,230,234,238,243,244,245,247,248,252,253,254,267,271,272,],[33,33,-2,-5,-6,-7,-8,-9,-10,-11,110,110,-55,-56,-3,-4,-96,110,110,110,110,110,-47,-48,-49,-50,-51,-52,-84,33,-92,-95,110,110,110,-47,-85,-87,-88,33,-106,-100,-98,-99,-149,33,-158,-159,-160,-131,110,110,110,110,-86,-89,-91,-105,-97,-28,110,-148,110,-90,-27,]),'CLASS':([2,3,4,6,7,8,9,10,11,12,61,62,79,138,139,140,141,193,194,195,198,199,202,203,204,211,243,244,245,247,248,252,254,271,272,],[36,36,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,-84,36,-92,-95,-85,-87,-88,36,-106,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'FSCANF':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,138,139,140,141,193,194,195,198,199,201,202,203,204,211,243,244,245,247,248,252,254,271,272,],[38,38,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,38,-84,38,-92,-95,-85,-87,-88,38,-106,38,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'FGETS':([2,3,4,6,7,8,9,10,11,12,37,42,47,48,61,62,79,80,89,93,106,108,114,117,119,120,121,122,123,138,139,140,141,159,160,163,171,193,194,195,198,199,201,202,203,204,211,222,229,230,234,238,243,244,245,247,248,252,253,254,267,271,272,],[40,40,-2,-5,-6,-7,-8,-9,-10,-11,40,40,-55,-56,-3,-4,-96,40,40,40,40,40,40,-47,-48,-49,-50,-51,-52,-84,40,-92,-95,40,40,40,-47,-85,-87,-88,40,-106,40,-100,-98,-99,-149,-131,40,40,40,40,-86,-89,-91,-105,-97,-28,40,-148,40,-90,-27,]),'NAME':([2,3,4,6,7,8,9,10,11,12,33,36,37,42,47,48,61,62,79,80,89,93,106,108,111,114,117,119,120,121,122,123,133,138,139,140,141,159,160,161,163,171,193,194,195,198,199,201,202,203,204,211,222,229,230,234,238,243,244,245,247,248,252,253,254,267,271,272,],[34,34,-2,-5,-6,-7,-8,-9,-10,-11,88,92,34,34,-55,-56,-3,-4,-96,34,34,34,34,34,173,34,-47,-48,-49,-50,-51,-52,192,-84,34,-92,-95,34,34,226,34,-47,-85,-87,-88,34,-106,34,-100,-98,-99,-149,-131,34,34,34,34,-86,-89,-91,-105,-97,-28,34,-148,34,-90,-27,]),'RETURN':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,138,139,140,141,193,194,195,198,199,201,202,203,204,211,243,244,245,247,248,252,254,271,272,],[42,42,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,42,-84,42,-92,-95,-85,-87,-88,42,-106,42,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'UNSET':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,138,139,140,141,193,194,195,198,199,201,202,203,204,211,243,244,245,247,248,252,254,271,272,],[43,43,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,43,-84,43,-92,-95,-85,-87,-88,43,-106,43,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'COUNT':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,138,139,140,141,193,194,195,198,199,201,202,203,204,211,243,244,245,247,248,252,254,271,272,],[44,44,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,44,-84,44,-92,-95,-85,-87,-88,44,-106,44,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'FOR':([2,3,4,6,7,8,9,10,11,12,61,62,79,138,139,140,141,193,194,195,198,199,202,203,204,211,243,244,245,247,248,252,254,271,272,],[46,46,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,-84,46,-92,-95,-85,-87,-88,46,-106,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'PRINT':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,138,139,140,141,193,194,195,198,199,201,202,203,204,211,243,244,245,247,248,252,254,271,272,],[47,47,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,47,-84,47,-92,-95,-85,-87,-88,47,-106,47,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'ECHO':([2,3,4,6,7,8,9,10,11,12,61,62,79,80,138,139,140,141,193,194,195,198,199,201,202,203,204,211,243,244,245,247,248,252,254,271,272,],[48,48,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,48,-84,48,-92,-95,-85,-87,-88,48,-106,48,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'ID':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,114,117,119,120,121,122,123,125,126,127,128,129,130,131,132,138,139,140,141,146,152,159,160,163,171,172,189,193,194,195,198,199,201,202,203,204,211,217,218,219,220,222,229,230,234,238,241,242,243,244,245,247,248,251,252,253,254,267,271,272,278,284,],[49,49,-2,-5,-6,-7,-8,-9,-10,-11,49,49,101,101,-55,-56,49,-3,-4,49,49,49,-119,-120,-121,-122,-123,-124,-125,-126,-127,49,-96,49,49,49,-128,-129,-130,101,101,101,101,101,-47,-48,-49,-50,-51,-52,49,49,49,49,49,49,49,49,-84,49,-92,-95,49,49,101,101,101,-47,49,-94,-85,-87,-88,49,-106,49,-100,-98,-99,-149,49,-158,-159,-160,-131,101,101,101,101,-93,49,-86,-89,-91,-105,-97,49,-28,101,-148,101,-90,-27,49,49,]),'INTEGER':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,114,117,118,119,120,121,122,123,125,128,129,130,131,138,139,140,141,152,159,160,163,170,171,189,193,194,195,198,199,201,202,203,204,211,222,229,230,234,238,239,241,243,244,245,247,248,252,253,254,267,271,272,],[51,51,-2,-5,-6,-7,-8,-9,-10,-11,51,51,51,51,-55,-56,51,-3,-4,51,51,51,-119,-120,-121,-122,-123,-124,-125,-126,-127,51,-96,51,51,51,-128,-129,-130,51,51,51,169,51,-47,181,-48,-49,-50,-51,-52,51,51,51,51,51,-84,51,-92,-95,51,51,51,169,181,-47,-94,-85,-87,-88,51,-106,51,-100,-98,-99,-149,-131,169,51,51,51,181,-93,-86,-89,-91,-105,-97,-28,51,-148,51,-90,-27,]),'FLOAT':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,114,117,119,120,121,122,123,125,128,129,130,131,138,139,140,141,152,159,160,163,171,189,193,194,195,198,199,201,202,203,204,211,222,229,230,234,238,241,243,244,245,247,248,252,253,254,267,271,272,],[52,52,-2,-5,-6,-7,-8,-9,-10,-11,52,52,52,52,-55,-56,52,-3,-4,52,52,52,-119,-120,-121,-122,-123,-124,-125,-126,-127,52,-96,52,52,52,-128,-129,-130,52,52,52,52,52,-47,-48,-49,-50,-51,-52,52,52,52,52,52,-84,52,-92,-95,52,52,52,52,-47,-94,-85,-87,-88,52,-106,52,-100,-98,-99,-149,-131,52,52,52,52,-93,-86,-89,-91,-105,-97,-28,52,-148,52,-90,-27,]),'STRING':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,114,117,118,119,120,121,122,123,125,128,129,130,131,138,139,140,141,152,159,160,163,170,171,189,193,194,195,198,199,201,202,203,204,211,222,229,230,234,235,238,239,241,243,244,245,247,248,252,253,254,267,271,272,],[39,39,-2,-5,-6,-7,-8,-9,-10,-11,39,39,96,96,-55,-56,39,-3,-4,39,39,39,-119,-120,-121,-122,-123,-124,-125,-126,-127,39,-96,39,39,39,-128,-129,-130,96,96,96,168,96,-47,180,-48,-49,-50,-51,-52,39,39,39,39,39,-84,39,-92,-95,39,96,96,168,180,-47,-94,-85,-87,-88,39,-106,39,-100,-98,-99,-149,-131,168,96,96,266,96,180,-93,-86,-89,-91,-105,-97,-28,96,-148,96,-90,-27,]),'LEFT_PAREN':([2,3,4,6,7,8,9,10,11,12,28,30,31,34,35,37,38,40,42,43,44,46,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,88,89,93,106,107,108,110,114,117,119,120,121,122,123,125,128,129,130,131,138,139,140,141,152,159,160,163,171,173,189,193,194,195,197,198,199,201,202,203,204,211,222,226,229,230,234,238,241,243,244,245,247,248,252,253,254,267,271,272,],[35,35,-2,-5,-6,-7,-8,-9,-10,-11,76,76,82,89,82,93,112,113,125,126,127,132,-55,-56,82,-3,-4,35,35,35,-119,-120,-121,-122,-123,-124,-125,-126,-127,82,-96,35,82,82,-128,-129,-130,146,125,152,125,163,125,172,125,-47,-48,-49,-50,-51,-52,82,35,35,35,35,-84,35,-92,-95,82,125,125,125,-47,234,-94,-85,-87,-88,76,35,-106,35,-100,-98,-99,-149,-131,89,125,125,125,125,-93,-86,-89,-91,-105,-97,-28,125,-148,125,-90,-27,]),'TRUE':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,114,117,119,120,121,122,123,125,128,129,130,131,138,139,140,141,152,159,160,163,171,189,193,194,195,198,199,201,202,203,204,211,222,229,230,234,238,241,243,244,245,247,248,252,253,254,267,271,272,],[56,56,-2,-5,-6,-7,-8,-9,-10,-11,56,56,56,56,-55,-56,56,-3,-4,56,56,56,-119,-120,-121,-122,-123,-124,-125,-126,-127,56,-96,56,56,56,-128,-129,-130,56,56,56,56,56,-47,-48,-49,-50,-51,-52,56,56,56,56,56,-84,56,-92,-95,56,56,56,56,-47,-94,-85,-87,-88,56,-106,56,-100,-98,-99,-149,-131,56,56,56,56,-93,-86,-89,-91,-105,-97,-28,56,-148,56,-90,-27,]),'FALSE':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,114,117,119,120,121,122,123,125,128,129,130,131,138,139,140,141,152,159,160,163,171,189,193,194,195,198,199,201,202,203,204,211,222,229,230,234,238,241,243,244,245,247,248,252,253,254,267,271,272,],[57,57,-2,-5,-6,-7,-8,-9,-10,-11,57,57,57,57,-55,-56,57,-3,-4,57,57,57,-119,-120,-121,-122,-123,-124,-125,-126,-127,57,-96,57,57,57,-128,-129,-130,57,57,57,57,57,-47,-48,-49,-50,-51,-52,57,57,57,57,57,-84,57,-92,-95,57,57,57,57,-47,-94,-85,-87,-88,57,-106,57,-100,-98,-99,-149,-131,57,57,57,57,-93,-86,-89,-91,-105,-97,-28,57,-148,57,-90,-27,]),'LOGICAL_NOT':([2,3,4,6,7,8,9,10,11,12,31,35,37,42,47,48,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,79,80,82,84,85,86,87,89,93,106,108,114,117,119,120,121,122,123,125,128,129,130,131,138,139,140,141,152,159,160,163,171,189,193,194,195,198,199,201,202,203,204,211,222,229,230,234,238,241,243,244,245,247,248,252,253,254,267,271,272,],[59,59,-2,-5,-6,-7,-8,-9,-10,-11,59,59,59,59,-55,-56,59,-3,-4,59,59,59,-119,-120,-121,-122,-123,-124,-125,-126,-127,59,-96,59,59,59,-128,-129,-130,59,59,59,59,59,-47,-48,-49,-50,-51,-52,59,59,59,59,59,-84,59,-92,-95,59,59,59,59,-47,-94,-85,-87,-88,59,-106,59,-100,-98,-99,-149,-131,59,59,59,59,-93,-86,-89,-91,-105,-97,-28,59,-148,59,-90,-27,]),'CLOSE_TAG':([3,4,6,7,8,9,10,11,12,61,62,79,138,140,141,193,194,195,199,202,203,204,211,243,244,245,247,248,252,254,271,272,],[60,-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,-84,-92,-95,-85,-87,-88,-106,-100,-98,-99,-149,-86,-89,-91,-105,-97,-28,-148,-90,-27,]),'RIGHT_BRACE':([4,6,7,8,9,10,11,12,61,62,79,138,139,140,141,151,193,194,195,198,199,202,203,204,210,211,212,213,214,215,216,243,244,245,247,248,252,254,255,256,271,272,275,],[-2,-5,-6,-7,-8,-9,-10,-11,-3,-4,-96,-84,199,-92,-95,211,-85,-87,-88,247,-106,-100,-98,-99,254,-149,-150,-152,-153,-154,-155,-86,-89,-91,-105,-97,-28,-148,-151,-156,-90,-27,-157,]),'SEMICOLON':([5,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,94,95,96,97,98,99,100,101,102,103,104,105,109,115,116,124,132,134,135,136,137,143,145,148,149,150,162,176,177,184,185,186,187,188,189,190,192,199,200,209,221,223,224,225,226,228,236,237,240,241,247,257,258,261,263,264,268,270,276,277,279,283,285,],[62,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-110,80,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,80,-113,-54,-57,-60,-61,-62,-63,-64,-42,-66,-67,-68,-69,-113,-45,-46,-35,189,-115,-71,-72,-118,202,-116,-37,-83,-117,-70,-44,-134,-74,-75,-76,-77,241,-94,-101,-43,-106,202,-36,-53,-58,-59,-65,-43,-136,-38,-143,-147,-93,-105,275,-135,-143,-30,-161,-144,-102,-29,-162,-145,-146,-39,]),'RIGHT_PAREN':([13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,80,81,89,90,91,94,95,96,97,98,99,100,101,102,103,104,105,109,115,116,124,134,135,136,137,142,144,145,146,147,148,149,150,153,154,155,156,157,158,162,165,166,168,169,172,175,176,177,183,184,185,186,187,192,199,205,207,208,209,221,223,224,225,226,227,228,232,234,236,237,240,247,249,258,259,260,261,263,264,265,268,273,274,276,277,279,280,281,282,283,285,286,],[-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,143,-113,148,149,150,-54,-57,-60,-61,-62,-63,-64,-42,-66,-67,-68,-69,-113,-45,-46,-35,-115,-71,-72,-118,200,-103,-116,206,209,-37,-83,-117,221,222,149,-132,-133,-113,-70,-137,-139,-60,-79,233,236,-44,-134,240,-74,-75,-76,-77,-43,-106,250,-31,-33,-36,-53,-58,-59,-65,-43,258,-136,262,264,-38,-143,-147,-105,-104,-135,-138,-140,-143,-30,-161,277,-144,-32,-34,-29,-162,-145,283,285,-40,-146,-39,-41,]),'COMMA':([13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,81,91,94,95,96,97,98,99,100,101,102,103,104,105,109,115,116,124,134,135,136,137,142,144,145,147,148,149,150,153,155,158,162,164,165,166,168,169,174,176,177,184,185,186,187,188,190,192,199,205,207,208,209,221,223,224,225,226,227,228,232,236,237,240,247,249,258,259,260,261,263,264,265,266,268,270,273,274,276,277,279,281,282,283,285,286,],[-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-113,-81,160,-57,-60,-61,-62,-63,-64,-42,-66,-67,-68,-69,-113,-45,-46,160,-115,-71,-72,-118,201,-103,-116,160,-37,-83,-117,160,-61,-113,-70,229,-137,-139,-60,-79,235,-44,-134,-74,-75,-76,-77,242,-101,-43,-106,251,-31,-33,-36,-53,-58,-59,-65,-43,229,-136,251,-38,-143,-147,-105,-104,-135,-138,-140,-143,-30,-161,160,278,-144,-102,-32,-34,-29,-162,-145,284,-40,-146,-39,-41,]),'PLUS':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[63,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,63,63,-81,-82,63,-42,-113,-81,-71,-72,63,-81,-83,-117,63,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'MINUS':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[64,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,64,64,-81,-82,64,-42,-113,-81,-71,-72,64,-81,-83,-117,64,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'EQUAL_TO':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[66,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,66,66,-81,-82,66,-42,-113,-81,-71,-72,66,-81,-83,-117,66,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'NOT_EQUAL_TO':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[67,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,67,67,-81,-82,67,-42,-113,-81,-71,-72,67,-81,-83,-117,67,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'LESS_THAN':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[68,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,68,68,-81,-82,68,-42,-113,-81,-71,-72,68,-81,-83,-117,68,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'GREATER_THAN':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[69,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,69,69,-81,-82,69,-42,-113,-81,-71,-72,69,-81,-83,-117,69,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'LESS_EQUAL':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[70,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,70,70,-81,-82,70,-42,-113,-81,-71,-72,70,-81,-83,-117,70,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'GREATER_EQUAL':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[71,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,71,71,-81,-82,71,-42,-113,-81,-71,-72,71,-81,-83,-117,71,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'IDENTICAL_TO':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[72,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,72,72,-81,-82,72,-42,-113,-81,-71,-72,72,-81,-83,-117,72,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'NOT_IDENTICAL_TO':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[73,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,73,73,-81,-82,73,-42,-113,-81,-71,-72,73,-81,-83,-117,73,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'DIFFERENT':([27,29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,83,90,91,96,97,101,109,134,135,136,137,145,149,150,155,158,168,169,184,185,186,187,192,226,],[74,-110,-81,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,74,74,-81,-82,74,-42,-113,-81,-71,-72,74,-81,-83,-117,74,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'LOGICAL_AND':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,101,109,134,135,136,137,145,149,150,158,184,185,186,187,192,226,],[-110,85,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,85,-113,85,-42,-113,85,-71,-72,-118,85,-83,-117,-113,-74,-75,-76,-77,-43,-43,]),'LOGICAL_OR':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,101,109,134,135,136,137,145,149,150,158,184,185,186,187,192,226,],[-110,86,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,86,-113,86,-42,-113,86,-71,-72,-118,86,-83,-117,-113,-74,-75,-76,-77,-43,-43,]),'LOGICAL_XOR':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,101,109,134,135,136,137,145,149,150,158,184,185,186,187,192,226,],[-110,87,-82,-113,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,87,-113,87,-42,-113,87,-71,-72,-118,87,-83,-117,-113,-74,-75,-76,-77,-43,-43,]),'TIMES':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,96,101,109,134,135,136,137,145,149,150,158,168,169,184,185,186,187,192,226,],[-110,-81,-82,-113,128,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,-81,-82,-42,-113,-81,128,128,-118,-81,-83,-117,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'DIVIDE':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,96,101,109,134,135,136,137,145,149,150,158,168,169,184,185,186,187,192,226,],[-110,-81,-82,-113,129,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,-81,-82,-42,-113,-81,129,129,-118,-81,-83,-117,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'MOD':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,96,101,109,134,135,136,137,145,149,150,158,168,169,184,185,186,187,192,226,],[-110,-81,-82,-113,130,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,-81,-82,-42,-113,-81,130,130,-118,-81,-83,-117,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'POWER':([29,32,39,41,45,49,50,51,52,53,54,55,56,57,58,78,81,91,96,101,109,134,135,136,137,145,149,150,158,168,169,184,185,186,187,192,226,],[-110,-81,-82,-113,131,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-81,-113,-81,-82,-42,-113,-81,131,131,-118,-81,-83,-117,-113,-82,-79,-74,-75,-76,-77,-43,-43,]),'DOT':([29,32,39,45,49,50,51,52,53,54,55,56,57,58,81,91,94,95,96,97,98,99,100,101,102,103,104,105,109,115,116,124,134,135,136,137,145,147,148,149,150,153,155,158,162,176,184,185,186,187,192,199,209,223,224,225,226,228,236,247,258,261,263,264,265,276,277,],[-110,-81,-82,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-113,-81,159,-57,-60,-61,-62,-63,-64,-42,-66,-67,-68,-69,-113,-45,-46,159,-115,-71,-72,-118,-116,159,-37,-83,-117,159,-61,-113,-70,-44,-74,-75,-76,-77,-43,-106,-36,-58,-59,-65,-43,-136,-38,-105,-135,-143,-30,-161,159,-29,-162,]),'RIGHT_BRACKET':([29,32,39,45,49,50,51,52,53,54,55,56,57,58,81,96,97,98,99,100,101,102,103,104,105,109,115,116,118,134,135,136,137,145,148,149,150,162,164,165,166,168,169,176,178,180,181,184,185,186,187,192,199,209,225,226,228,231,236,247,258,259,260,261,263,264,269,276,277,],[-110,-81,-82,-73,-42,-78,-79,-80,-107,-108,-109,-111,-112,-114,-113,-60,-61,-62,-63,-64,-42,-66,-67,-68,-69,-113,-45,-46,179,-115,-71,-72,-118,-116,-37,-83,-117,-70,228,-137,-139,-60,-79,-44,237,-141,-142,-74,-75,-76,-77,-43,-106,-36,-65,-43,-136,261,-38,-105,-135,-138,-140,-143,-30,-161,280,-29,-162,]),'ARRAY':([37,42,47,48,89,93,106,108,114,117,119,120,121,122,123,159,160,163,171,222,229,230,234,238,253,267,],[107,107,-55,-56,107,107,107,107,107,107,-48,-49,-50,-51,-52,107,107,107,-47,-131,107,107,107,107,107,107,]),'LEFT_BRACKET':([37,41,42,47,48,49,89,93,101,106,108,109,114,117,119,120,121,122,123,158,159,160,163,171,182,192,222,226,229,230,234,238,253,267,],[108,118,108,-55,-56,-42,108,108,-42,108,108,170,108,108,-48,-49,-50,-51,-52,170,108,108,108,-47,239,-43,-131,-43,108,108,108,108,108,108,]),'NEW':([37,42,47,48,89,93,106,108,114,117,119,120,121,122,123,159,160,163,171,222,229,230,234,238,253,267,],[111,111,-55,-56,111,111,111,111,111,-47,-48,-49,-50,-51,-52,111,111,111,-47,-131,111,111,111,111,111,111,]),'PLUS_PLUS':([41,49,101,109,158,191,192,226,],[115,-42,-42,115,115,115,-43,-43,]),'MINUS_MINUS':([41,49,101,109,158,191,192,226,],[116,-42,-42,116,116,116,-43,-43,]),'EQUALS':([41,49,101,109,158,179,191,192,208,226,237,],[117,-42,-42,171,171,238,171,-43,253,-43,267,]),'PLUS_EQUALS':([41,49,101,109,158,191,192,226,],[119,-42,-42,119,119,119,-43,-43,]),'MINUS_EQUALS':([41,49,101,109,158,191,192,226,],[120,-42,-42,120,120,120,-43,-43,]),'TIMES_EQUALS':([41,49,101,109,158,191,192,226,],[121,-42,-42,121,121,121,-43,-43,]),'DIVIDE_EQUALS':([41,49,101,109,158,191,192,226,],[122,-42,-42,122,122,122,-43,-43,]),'MOD_EQUALS':([41,49,101,109,158,191,192,226,],[123,-42,-42,123,123,123,-43,-43,]),'CALL':([49,101,],[133,161,]),'LEFT_BRACE':([75,77,92,143,150,196,200,206,233,246,250,262,],[139,139,151,139,-117,139,139,139,139,139,139,139,]),'INT_TYPE':([93,125,152,],[156,156,156,]),'FLOAT_TYPE':([93,125,152,],[157,157,157,]),'STDIN':([112,113,],[174,175,]),'ELSE':([138,193,195,199,244,247,271,],[196,196,-88,-106,-89,-105,-90,]),'ELSEIF':([138,193,195,199,244,247,271,],[197,197,-88,-106,-89,-105,-90,]),'PUBLIC':([151,199,210,212,213,214,215,216,247,252,255,256,272,275,],[218,-106,218,-150,-152,-153,-154,-155,-105,-28,-151,-156,-27,-157,]),'PRIVATE':([151,199,210,212,213,214,215,216,247,252,255,256,272,275,],[219,-106,219,-150,-152,-153,-154,-155,-105,-28,-151,-156,-27,-157,]),'PROTECTED':([151,199,210,212,213,214,215,216,247,252,255,256,272,275,],[220,-106,220,-150,-152,-153,-154,-155,-105,-28,-151,-156,-27,-157,]),'KEY_VALUE':([167,168,169,],[230,-141,-142,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([2,139,],[3,198,]),'statement2':([2,3,139,198,],[4,61,4,61,]),'statement':([2,3,80,139,198,201,],[5,5,144,5,5,249,]),'if_statement':([2,3,139,198,],[6,6,6,6,]),'while_statement':([2,3,139,198,],[7,7,7,7,]),'for_statement':([2,3,139,198,],[8,8,8,8,]),'function_statement':([2,3,139,198,217,],[9,9,9,9,256,]),'class_declaration':([2,3,139,198,],[12,12,12,12,]),'print_statement':([2,3,80,139,198,201,],[13,13,13,13,13,13,]),'fscanf_statement':([2,3,80,139,198,201,],[14,14,14,14,14,14,]),'fgets_statement':([2,3,37,42,80,89,93,106,108,114,139,159,160,163,198,201,229,230,234,238,253,267,],[15,15,104,104,15,104,104,104,104,104,15,104,104,104,15,15,104,104,104,104,104,104,]),'assignment_statement':([2,3,37,42,80,89,93,106,108,114,132,139,159,160,163,198,201,229,230,234,238,242,253,267,],[16,16,103,103,16,103,103,103,103,103,190,16,103,103,103,16,16,103,103,103,103,270,103,103,]),'array_declaration_statement':([2,3,80,139,198,201,],[17,17,17,17,17,17,]),'function_call':([2,3,37,42,80,89,93,106,108,114,139,159,160,161,163,198,201,229,230,234,238,253,267,],[20,20,100,100,20,100,100,100,100,100,20,100,100,225,100,20,20,100,100,100,100,100,100,]),'return_statement':([2,3,80,139,198,201,],[21,21,21,21,21,21,]),'array_indexing':([2,3,37,42,80,89,93,106,108,114,139,159,160,163,198,201,229,230,234,238,253,267,],[22,22,99,99,22,99,99,99,99,99,22,99,99,99,22,22,99,99,99,99,99,99,]),'array_add_element':([2,3,80,139,198,201,],[23,23,23,23,23,23,]),'array_modify_element':([2,3,80,139,198,201,],[24,24,24,24,24,24,]),'array_remove_element':([2,3,80,139,198,201,],[25,25,25,25,25,25,]),'array_count_elements':([2,3,80,139,198,201,],[26,26,26,26,26,26,]),'expression':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,198,201,229,230,234,238,253,267,],[27,27,83,90,97,97,83,83,83,137,83,27,90,83,97,155,97,97,97,90,83,83,83,83,27,90,97,97,97,27,27,97,97,97,97,97,97,]),'parenthesized_condition':([2,3,28,30,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,197,198,201,229,230,234,238,253,267,],[29,29,75,77,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,246,29,29,29,29,29,29,29,29,]),'for_part1':([2,3,139,198,],[31,31,31,31,]),'condition':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,198,201,229,230,234,238,253,267,],[32,32,78,91,32,32,134,32,32,32,91,32,91,145,32,91,32,32,32,91,32,32,32,32,32,91,32,32,32,32,32,32,32,32,32,32,32,]),'print_function':([2,3,80,139,198,201,],[37,37,37,37,37,37,]),'variable':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,126,127,128,129,130,131,132,139,146,152,159,160,163,172,198,201,217,229,230,234,238,242,251,253,267,278,284,],[41,41,81,81,109,109,81,81,81,81,81,41,81,81,109,158,109,109,109,81,182,183,81,81,81,81,191,41,208,81,109,109,109,208,41,41,257,109,109,109,109,191,208,109,109,282,286,]),'term':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,198,201,229,230,234,238,253,267,],[45,45,45,45,45,45,45,135,136,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'factor':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,198,201,229,230,234,238,253,267,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,184,185,186,187,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'simple_condition':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,198,201,229,230,234,238,253,267,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'negated_condition':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,198,201,229,230,234,238,253,267,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'complex_condition':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,198,201,229,230,234,238,253,267,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'relational_expression':([2,3,31,35,37,42,59,63,64,65,76,80,82,84,89,93,106,108,114,125,128,129,130,131,139,152,159,160,163,198,201,229,230,234,238,253,267,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'relational_operator':([27,83,90,97,137,155,],[65,65,65,65,65,65,]),'for_part3':([31,78,],[79,141,]),'logical_operator':([32,78,91,134,145,],[84,84,84,84,84,]),'arguments':([37,42,89,93,234,],[94,124,147,153,265,]),'argument':([37,42,89,93,106,108,114,159,160,163,229,230,234,238,253,267,],[95,95,95,95,162,166,176,223,224,166,166,260,95,268,274,279,]),'array':([37,42,89,93,106,108,114,117,159,160,163,229,230,234,238,253,267,],[98,98,98,98,98,98,98,177,98,98,98,98,98,98,98,98,98,]),'anonymous_function':([37,42,89,93,106,108,114,159,160,163,229,230,234,238,253,267,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'object_creation':([37,42,89,93,106,108,114,159,160,163,229,230,234,238,253,267,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'casting':([37,42,89,93,106,108,114,159,160,163,229,230,234,238,253,267,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'assignment_operator':([41,109,158,191,],[114,114,114,114,]),'block':([75,77,143,196,200,206,233,246,250,262,],[138,140,204,245,204,252,263,271,272,276,]),'statement_list':([80,],[142,]),'casting_type':([93,125,152,],[154,154,154,]),'array_elements':([108,163,],[164,227,]),'array_argument':([108,163,229,],[165,165,259,]),'clave':([108,118,163,170,229,239,],[167,178,167,231,167,269,]),'assignment_list':([132,],[188,]),'else_if_extended':([138,],[193,]),'if_part3':([138,193,],[194,243,]),'if_part2':([138,193,],[195,244,]),'for_part4':([143,200,],[203,248,]),'parameters':([146,172,],[205,232,]),'parameter':([146,172,251,],[207,207,273,]),'class_statements':([151,],[210,]),'class_statement':([151,210,],[212,255,]),'method_declaration':([151,210,],[213,213,]),'property_declaration':([151,210,],[214,214,]),'visibility_operator':([151,210,],[217,217,]),'variable_list':([278,],[281,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPEN_TAG statements CLOSE_TAG','program',3,'p_program','parserPHP.py',30),
  ('statements -> statement2','statements',1,'p_statements','parserPHP.py',35),
  ('statements -> statements statement2','statements',2,'p_statements','parserPHP.py',36),
  ('statement2 -> statement SEMICOLON','statement2',2,'p_statement2','parserPHP.py',44),
  ('statement2 -> if_statement','statement2',1,'p_statement2','parserPHP.py',45),
  ('statement2 -> while_statement','statement2',1,'p_statement2','parserPHP.py',46),
  ('statement2 -> for_statement','statement2',1,'p_statement2','parserPHP.py',47),
  ('statement2 -> function_statement','statement2',1,'p_statement2','parserPHP.py',48),
  ('statement2 -> ONE_LINE_COMMENT','statement2',1,'p_statement2','parserPHP.py',49),
  ('statement2 -> MULTI_LINE_COMMENT','statement2',1,'p_statement2','parserPHP.py',50),
  ('statement2 -> class_declaration','statement2',1,'p_statement2','parserPHP.py',51),
  ('statement -> print_statement','statement',1,'p_statement','parserPHP.py',55),
  ('statement -> fscanf_statement','statement',1,'p_statement','parserPHP.py',56),
  ('statement -> fgets_statement','statement',1,'p_statement','parserPHP.py',57),
  ('statement -> assignment_statement','statement',1,'p_statement','parserPHP.py',58),
  ('statement -> array_declaration_statement','statement',1,'p_statement','parserPHP.py',59),
  ('statement -> BREAK','statement',1,'p_statement','parserPHP.py',60),
  ('statement -> CONTINUE','statement',1,'p_statement','parserPHP.py',61),
  ('statement -> function_call','statement',1,'p_statement','parserPHP.py',62),
  ('statement -> return_statement','statement',1,'p_statement','parserPHP.py',63),
  ('statement -> array_indexing','statement',1,'p_statement','parserPHP.py',64),
  ('statement -> array_add_element','statement',1,'p_statement','parserPHP.py',65),
  ('statement -> array_modify_element','statement',1,'p_statement','parserPHP.py',66),
  ('statement -> array_remove_element','statement',1,'p_statement','parserPHP.py',67),
  ('statement -> array_count_elements','statement',1,'p_statement','parserPHP.py',68),
  ('statement -> expression','statement',1,'p_statement','parserPHP.py',69),
  ('function_statement -> FUNCTION NAME LEFT_PAREN parameters RIGHT_PAREN block','function_statement',6,'p_function_statement','parserPHP.py',99),
  ('function_statement -> FUNCTION NAME LEFT_PAREN RIGHT_PAREN block','function_statement',5,'p_function_statement','parserPHP.py',100),
  ('anonymous_function -> FUNCTION LEFT_PAREN parameters RIGHT_PAREN block','anonymous_function',5,'p_anonymous_function','parserPHP.py',111),
  ('anonymous_function -> FUNCTION LEFT_PAREN RIGHT_PAREN block','anonymous_function',4,'p_anonymous_function','parserPHP.py',112),
  ('parameters -> parameter','parameters',1,'p_parameters','parserPHP.py',119),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','parserPHP.py',120),
  ('parameter -> variable','parameter',1,'p_parameter','parserPHP.py',128),
  ('parameter -> variable EQUALS argument','parameter',3,'p_parameter','parserPHP.py',129),
  ('return_statement -> RETURN arguments','return_statement',2,'p_return_statement','parserPHP.py',140),
  ('function_call -> NAME LEFT_PAREN arguments RIGHT_PAREN','function_call',4,'p_function_call','parserPHP.py',145),
  ('function_call -> NAME LEFT_PAREN RIGHT_PAREN','function_call',3,'p_function_call','parserPHP.py',146),
  ('fgets_statement -> FGETS LEFT_PAREN STDIN RIGHT_PAREN','fgets_statement',4,'p_fgets_statement','parserPHP.py',157),
  ('fscanf_statement -> FSCANF LEFT_PAREN STDIN COMMA STRING COMMA variable_list RIGHT_PAREN','fscanf_statement',8,'p_fscanf_statement','parserPHP.py',162),
  ('variable_list -> variable','variable_list',1,'p_variable_list','parserPHP.py',166),
  ('variable_list -> variable_list COMMA variable','variable_list',3,'p_variable_list','parserPHP.py',167),
  ('variable -> ID','variable',1,'p_variable','parserPHP.py',176),
  ('variable -> ID CALL NAME','variable',3,'p_variable','parserPHP.py',177),
  ('assignment_statement -> variable assignment_operator argument','assignment_statement',3,'p_assignment_statement','parserPHP.py',185),
  ('assignment_statement -> variable PLUS_PLUS','assignment_statement',2,'p_assignment_statement','parserPHP.py',186),
  ('assignment_statement -> variable MINUS_MINUS','assignment_statement',2,'p_assignment_statement','parserPHP.py',187),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',234),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',235),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',236),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',237),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',238),
  ('assignment_operator -> MOD_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',239),
  ('print_statement -> print_function LEFT_PAREN arguments RIGHT_PAREN','print_statement',4,'p_print_statement','parserPHP.py',244),
  ('print_statement -> print_function arguments','print_statement',2,'p_print_statement','parserPHP.py',245),
  ('print_function -> PRINT','print_function',1,'p_print_function','parserPHP.py',252),
  ('print_function -> ECHO','print_function',1,'p_print_function','parserPHP.py',253),
  ('arguments -> argument','arguments',1,'p_arguments','parserPHP.py',257),
  ('arguments -> arguments DOT argument','arguments',3,'p_arguments','parserPHP.py',258),
  ('arguments -> arguments COMMA argument','arguments',3,'p_arguments','parserPHP.py',259),
  ('argument -> STRING','argument',1,'p_argument','parserPHP.py',267),
  ('argument -> expression','argument',1,'p_argument','parserPHP.py',268),
  ('argument -> array','argument',1,'p_argument','parserPHP.py',269),
  ('argument -> array_indexing','argument',1,'p_argument','parserPHP.py',270),
  ('argument -> function_call','argument',1,'p_argument','parserPHP.py',271),
  ('argument -> ID CALL function_call','argument',3,'p_argument','parserPHP.py',272),
  ('argument -> anonymous_function','argument',1,'p_argument','parserPHP.py',273),
  ('argument -> assignment_statement','argument',1,'p_argument','parserPHP.py',274),
  ('argument -> fgets_statement','argument',1,'p_argument','parserPHP.py',275),
  ('argument -> object_creation','argument',1,'p_argument','parserPHP.py',276),
  ('argument -> casting argument','argument',2,'p_argument','parserPHP.py',277),
  ('expression -> expression PLUS term','expression',3,'p_expression_arithmetic','parserPHP.py',287),
  ('expression -> expression MINUS term','expression',3,'p_expression_arithmetic','parserPHP.py',288),
  ('expression -> term','expression',1,'p_expression_arithmetic','parserPHP.py',289),
  ('term -> term TIMES factor','term',3,'p_term','parserPHP.py',297),
  ('term -> term DIVIDE factor','term',3,'p_term','parserPHP.py',298),
  ('term -> term MOD factor','term',3,'p_term','parserPHP.py',299),
  ('term -> term POWER factor','term',3,'p_term','parserPHP.py',300),
  ('term -> factor','term',1,'p_term','parserPHP.py',301),
  ('factor -> INTEGER','factor',1,'p_factor','parserPHP.py',308),
  ('factor -> FLOAT','factor',1,'p_factor','parserPHP.py',309),
  ('factor -> condition','factor',1,'p_factor','parserPHP.py',310),
  ('factor -> STRING','factor',1,'p_factor','parserPHP.py',311),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','parserPHP.py',312),
  ('if_statement -> IF parenthesized_condition block','if_statement',3,'p_if_statement','parserPHP.py',343),
  ('if_statement -> IF parenthesized_condition block else_if_extended','if_statement',4,'p_if_statement','parserPHP.py',344),
  ('if_statement -> IF parenthesized_condition block else_if_extended if_part3','if_statement',5,'p_if_statement','parserPHP.py',345),
  ('if_statement -> IF parenthesized_condition block if_part3','if_statement',4,'p_if_statement','parserPHP.py',346),
  ('else_if_extended -> if_part2','else_if_extended',1,'p_else_if_extended','parserPHP.py',355),
  ('else_if_extended -> else_if_extended if_part2','else_if_extended',2,'p_else_if_extended','parserPHP.py',356),
  ('if_part2 -> ELSEIF parenthesized_condition block','if_part2',3,'p_else_if_statement','parserPHP.py',364),
  ('if_part3 -> ELSE block','if_part3',2,'p_else_statement','parserPHP.py',368),
  ('while_statement -> WHILE parenthesized_condition block','while_statement',3,'p_while_statement','parserPHP.py',373),
  ('for_part1 -> FOR LEFT_PAREN assignment_list SEMICOLON','for_part1',4,'p_for_part1','parserPHP.py',378),
  ('for_part1 -> FOR LEFT_PAREN SEMICOLON','for_part1',3,'p_for_part1','parserPHP.py',379),
  ('for_statement -> for_part1 condition for_part3','for_statement',3,'p_for_part2','parserPHP.py',386),
  ('for_statement -> for_part1 for_part3','for_statement',2,'p_for_part2','parserPHP.py',387),
  ('for_part3 -> SEMICOLON statement_list RIGHT_PAREN for_part4','for_part3',4,'p_for_part3','parserPHP.py',394),
  ('for_part3 -> SEMICOLON RIGHT_PAREN for_part4','for_part3',3,'p_for_part3','parserPHP.py',395),
  ('for_part4 -> block','for_part4',1,'p_for_part4','parserPHP.py',402),
  ('for_part4 -> SEMICOLON','for_part4',1,'p_for_part4','parserPHP.py',403),
  ('assignment_list -> assignment_statement','assignment_list',1,'p_assignment_list','parserPHP.py',407),
  ('assignment_list -> assignment_list COMMA assignment_statement','assignment_list',3,'p_assignment_list','parserPHP.py',408),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parserPHP.py',416),
  ('statement_list -> statement_list COMMA statement','statement_list',3,'p_statement_list','parserPHP.py',417),
  ('block -> LEFT_BRACE statements RIGHT_BRACE','block',3,'p_block','parserPHP.py',426),
  ('block -> LEFT_BRACE RIGHT_BRACE','block',2,'p_block','parserPHP.py',427),
  ('condition -> simple_condition','condition',1,'p_condition','parserPHP.py',435),
  ('condition -> negated_condition','condition',1,'p_condition','parserPHP.py',436),
  ('condition -> complex_condition','condition',1,'p_condition','parserPHP.py',437),
  ('condition -> parenthesized_condition','condition',1,'p_condition','parserPHP.py',438),
  ('simple_condition -> TRUE','simple_condition',1,'p_simple_condition','parserPHP.py',442),
  ('simple_condition -> FALSE','simple_condition',1,'p_simple_condition','parserPHP.py',443),
  ('simple_condition -> variable','simple_condition',1,'p_simple_condition','parserPHP.py',444),
  ('simple_condition -> relational_expression','simple_condition',1,'p_simple_condition','parserPHP.py',445),
  ('negated_condition -> LOGICAL_NOT condition','negated_condition',2,'p_negated_condition','parserPHP.py',449),
  ('complex_condition -> condition logical_operator condition','complex_condition',3,'p_complex_condition','parserPHP.py',453),
  ('parenthesized_condition -> LEFT_PAREN condition RIGHT_PAREN','parenthesized_condition',3,'p_parenthesized_condition','parserPHP.py',457),
  ('relational_expression -> expression relational_operator expression','relational_expression',3,'p_relational_expression','parserPHP.py',461),
  ('relational_operator -> EQUAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',465),
  ('relational_operator -> NOT_EQUAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',466),
  ('relational_operator -> LESS_THAN','relational_operator',1,'p_relational_operator','parserPHP.py',467),
  ('relational_operator -> GREATER_THAN','relational_operator',1,'p_relational_operator','parserPHP.py',468),
  ('relational_operator -> LESS_EQUAL','relational_operator',1,'p_relational_operator','parserPHP.py',469),
  ('relational_operator -> GREATER_EQUAL','relational_operator',1,'p_relational_operator','parserPHP.py',470),
  ('relational_operator -> IDENTICAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',471),
  ('relational_operator -> NOT_IDENTICAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',472),
  ('relational_operator -> DIFFERENT','relational_operator',1,'p_relational_operator','parserPHP.py',473),
  ('logical_operator -> LOGICAL_AND','logical_operator',1,'p_logical_operator','parserPHP.py',477),
  ('logical_operator -> LOGICAL_OR','logical_operator',1,'p_logical_operator','parserPHP.py',478),
  ('logical_operator -> LOGICAL_XOR','logical_operator',1,'p_logical_operator','parserPHP.py',479),
  ('casting -> LEFT_PAREN casting_type RIGHT_PAREN','casting',3,'p_casting','parserPHP.py',484),
  ('casting_type -> INT_TYPE','casting_type',1,'p_casting_type','parserPHP.py',488),
  ('casting_type -> FLOAT_TYPE','casting_type',1,'p_casting_type','parserPHP.py',489),
  ('array_declaration_statement -> variable EQUALS array','array_declaration_statement',3,'p_array_declaration_statement','parserPHP.py',494),
  ('array -> ARRAY LEFT_PAREN array_elements RIGHT_PAREN','array',4,'p_array','parserPHP.py',499),
  ('array -> LEFT_BRACKET array_elements RIGHT_BRACKET','array',3,'p_array','parserPHP.py',500),
  ('array_elements -> array_argument','array_elements',1,'p_array_elements','parserPHP.py',507),
  ('array_elements -> array_elements COMMA array_argument','array_elements',3,'p_array_elements','parserPHP.py',508),
  ('array_argument -> argument','array_argument',1,'p_array_argument','parserPHP.py',517),
  ('array_argument -> clave KEY_VALUE argument','array_argument',3,'p_array_argument','parserPHP.py',518),
  ('clave -> STRING','clave',1,'p_clave','parserPHP.py',525),
  ('clave -> INTEGER','clave',1,'p_clave','parserPHP.py',526),
  ('array_indexing -> variable LEFT_BRACKET clave RIGHT_BRACKET','array_indexing',4,'p_array_indexing','parserPHP.py',541),
  ('array_add_element -> variable LEFT_BRACKET RIGHT_BRACKET EQUALS argument','array_add_element',5,'p_array_add_element','parserPHP.py',547),
  ('array_modify_element -> variable LEFT_BRACKET clave RIGHT_BRACKET EQUALS argument','array_modify_element',6,'p_array_modify_element','parserPHP.py',553),
  ('array_remove_element -> UNSET LEFT_PAREN variable LEFT_BRACKET clave RIGHT_BRACKET RIGHT_PAREN','array_remove_element',7,'p_array_remove_element','parserPHP.py',559),
  ('array_count_elements -> COUNT LEFT_PAREN variable RIGHT_PAREN','array_count_elements',4,'p_array_count_elements','parserPHP.py',565),
  ('class_declaration -> CLASS NAME LEFT_BRACE class_statements RIGHT_BRACE','class_declaration',5,'p_class_declaration','parserPHP.py',572),
  ('class_declaration -> CLASS NAME LEFT_BRACE RIGHT_BRACE','class_declaration',4,'p_class_declaration','parserPHP.py',573),
  ('class_statements -> class_statement','class_statements',1,'p_class_statements','parserPHP.py',580),
  ('class_statements -> class_statements class_statement','class_statements',2,'p_class_statements','parserPHP.py',581),
  ('class_statement -> method_declaration','class_statement',1,'p_class_statement','parserPHP.py',589),
  ('class_statement -> property_declaration','class_statement',1,'p_class_statement','parserPHP.py',590),
  ('class_statement -> ONE_LINE_COMMENT','class_statement',1,'p_class_statement','parserPHP.py',591),
  ('class_statement -> MULTI_LINE_COMMENT','class_statement',1,'p_class_statement','parserPHP.py',592),
  ('method_declaration -> visibility_operator function_statement','method_declaration',2,'p_method_declaration','parserPHP.py',596),
  ('property_declaration -> visibility_operator variable SEMICOLON','property_declaration',3,'p_property_declaration','parserPHP.py',600),
  ('visibility_operator -> PUBLIC','visibility_operator',1,'p_visibility_operator','parserPHP.py',604),
  ('visibility_operator -> PRIVATE','visibility_operator',1,'p_visibility_operator','parserPHP.py',605),
  ('visibility_operator -> PROTECTED','visibility_operator',1,'p_visibility_operator','parserPHP.py',606),
  ('object_creation -> NEW NAME LEFT_PAREN RIGHT_PAREN','object_creation',4,'p_object_creation','parserPHP.py',610),
  ('object_creation -> NEW NAME LEFT_PAREN arguments RIGHT_PAREN','object_creation',5,'p_object_creation','parserPHP.py',611),
]
