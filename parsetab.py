
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARRAY BREAK CALL CLASS CLOSE_TAG COMMA CONTINUE COUNT DIFFERENT DIVIDE DIVIDE_EQUALS DOT ECHO ELSE ELSEIF EQUALS EQUAL_TO FALSE FGETS FLOAT FLOAT_TYPE FOR FSCANF FUNCTION GREATER_EQUAL GREATER_THAN ID IDENTICAL_TO IF INTEGER INT_TYPE KEY_VALUE LEFT_BRACE LEFT_BRACKET LEFT_PAREN LESS_EQUAL LESS_THAN LOGICAL_AND LOGICAL_NOT LOGICAL_OR LOGICAL_XOR MINUS MINUS_EQUALS MINUS_MINUS MOD MOD_EQUALS MULTI_LINE_COMMENT NAME NEW NOT_EQUAL_TO NOT_IDENTICAL_TO ONE_LINE_COMMENT OPEN_TAG PLUS PLUS_EQUALS PLUS_PLUS POWER PRINT PRIVATE PROTECTED PUBLIC RETURN RIGHT_BRACE RIGHT_BRACKET RIGHT_PAREN SEMICOLON STDIN STRING TIMES TIMES_EQUALS TRUE UNSET WHILEprogram : OPEN_TAG statements CLOSE_TAG\n               | OPEN_TAG CLOSE_TAGstatements : statement2\n                  | statements statement2statement2 : statement SEMICOLON\n                  | if_statement\n                  | while_statement\n                  | for_statement\n                  | function_statement\n                  | ONE_LINE_COMMENT\n                  | MULTI_LINE_COMMENT\n                  | class_declarationstatement : print_statement\n                 | fscanf_statement\n                 | fgets_statement\n                 | assignment_statement\n                 | array_declaration_statement\n                 | BREAK\n                 | CONTINUE\n                 | function_call\n                 | return_statement\n                 | array_indexing\n                 | array_add_element\n                 | array_modify_element\n                 | array_remove_element\n                 | array_count_elements\n                 | expressionfunction_statement : FUNCTION NAME LEFT_PAREN parameters RIGHT_PAREN block\n                          | FUNCTION NAME LEFT_PAREN RIGHT_PAREN blockanonymous_function : FUNCTION LEFT_PAREN parameters RIGHT_PAREN block\n                          | FUNCTION LEFT_PAREN RIGHT_PAREN blockparameters : parameter\n                  | parameters COMMA parameterparameter : variable\n                 | variable EQUALS argumentreturn_statement : RETURN argumentsfunction_call : NAME LEFT_PAREN arguments RIGHT_PAREN\n                     | NAME LEFT_PAREN RIGHT_PARENfgets_statement : FGETS LEFT_PAREN STDIN RIGHT_PARENfscanf_statement : FSCANF LEFT_PAREN STDIN COMMA STRING COMMA variable_list RIGHT_PARENvariable_list : variable\n                     | variable_list COMMA variablevariable : ID\n                | ID CALL NAMEassignment_statement : variable assignment_operator argument\n                            | variable PLUS_PLUS\n                            | variable MINUS_MINUSassignment_operator : EQUALS\n                           | PLUS_EQUALS\n                           | MINUS_EQUALS\n                           | TIMES_EQUALS\n                           | DIVIDE_EQUALS\n                           | MOD_EQUALSprint_statement : print_function LEFT_PAREN arguments RIGHT_PAREN\n                       | print_function argumentsprint_function : PRINT\n                      | ECHOarguments : argument\n                 | arguments DOT argument\n                 | arguments COMMA argumentargument : STRING                \n                | expression\n                | array\n                | array_indexing\n                | function_call\n                | ID CALL function_call\n                | anonymous_function\n                | assignment_statement\n                | fgets_statement\n                | object_creation\n                | casting argumentexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MOD factor\n            | term POWER factor\n            | factorfactor : INTEGER\n              | FLOAT\n              | condition\n              | STRING\n              | LEFT_PAREN expression RIGHT_PARENif_statement : IF parenthesized_condition block\n                    | IF parenthesized_condition block else_if_extended\n                    | IF parenthesized_condition block else_if_extended if_part3\n                    | IF parenthesized_condition block if_part3else_if_extended : if_part2\n                        | else_if_extended if_part2if_part2 : ELSEIF parenthesized_condition blockif_part3 : ELSE blockwhile_statement : WHILE parenthesized_condition blockfor_part1 : FOR LEFT_PAREN assignment_list SEMICOLON\n                 | FOR LEFT_PAREN SEMICOLONfor_statement : for_part1 condition for_part3\n                     | for_part1 for_part3for_part3 : SEMICOLON statement_list RIGHT_PAREN for_part4\n                 | SEMICOLON RIGHT_PAREN for_part4for_part4 : block\n                 | SEMICOLONassignment_list : assignment_statement\n                       | assignment_list COMMA assignment_statementstatement_list : statement\n                      | statement_list COMMA statementblock : LEFT_BRACE statements RIGHT_BRACE\n             | LEFT_BRACE RIGHT_BRACEcondition : simple_condition\n                 | negated_condition\n                 | complex_condition\n                 | parenthesized_conditionsimple_condition : TRUE\n                        | FALSE\n                        | variable\n                        | relational_expressionnegated_condition : LOGICAL_NOT conditioncomplex_condition : condition logical_operator conditionparenthesized_condition : LEFT_PAREN condition RIGHT_PARENrelational_expression : expression relational_operator expressionrelational_operator : EQUAL_TO\n                           | NOT_EQUAL_TO\n                           | LESS_THAN\n                           | GREATER_THAN\n                           | LESS_EQUAL\n                           | GREATER_EQUAL\n                           | IDENTICAL_TO\n                           | NOT_IDENTICAL_TO\n                           | DIFFERENTlogical_operator : LOGICAL_AND\n                        | LOGICAL_OR\n                        | LOGICAL_XORcasting : LEFT_PAREN casting_type RIGHT_PARENcasting_type : INT_TYPE\n                    | FLOAT_TYPEarray_declaration_statement : variable EQUALS arrayarray : ARRAY LEFT_PAREN array_elements RIGHT_PAREN\n             | LEFT_BRACKET array_elements RIGHT_BRACKETarray_elements : array_argument\n                      | array_elements COMMA array_argumentarray_argument : argument\n                      | clave KEY_VALUE argumentclave : STRING\n             | INTEGERarray_indexing : variable LEFT_BRACKET clave RIGHT_BRACKETarray_add_element : variable LEFT_BRACKET RIGHT_BRACKET EQUALS argumentarray_modify_element : variable LEFT_BRACKET clave RIGHT_BRACKET EQUALS argumentarray_remove_element : UNSET LEFT_PAREN variable LEFT_BRACKET clave RIGHT_BRACKET RIGHT_PARENarray_count_elements : COUNT LEFT_PAREN variable RIGHT_PARENclass_declaration : CLASS NAME LEFT_BRACE class_statements RIGHT_BRACE\n                         | CLASS NAME LEFT_BRACE RIGHT_BRACEclass_statements : class_statement\n                        | class_statements class_statementclass_statement : method_declaration\n                       | property_declaration\n                       | ONE_LINE_COMMENT\n                       | MULTI_LINE_COMMENTmethod_declaration : visibility_operator function_statementproperty_declaration : visibility_operator variable SEMICOLONvisibility_operator : PUBLIC\n                           | PRIVATE\n                           | PROTECTEDobject_creation : NEW NAME LEFT_PAREN RIGHT_PAREN\n                       | NEW NAME LEFT_PAREN arguments RIGHT_PAREN'
    
_lr_action_items = {'OPEN_TAG':([0,],[2,]),'$end':([1,4,61,],[0,-2,-1,]),'CLOSE_TAG':([2,3,5,7,8,9,10,11,12,13,62,63,80,139,141,142,194,195,196,200,203,204,205,212,244,245,246,248,249,253,255,272,273,],[4,61,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,-85,-93,-96,-86,-88,-89,-107,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'ONE_LINE_COMMENT':([2,3,5,7,8,9,10,11,12,13,62,63,80,139,140,141,142,152,194,195,196,199,200,203,204,205,211,212,213,214,215,216,217,244,245,246,248,249,253,255,256,257,272,273,276,],[11,11,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,-85,11,-93,-96,216,-86,-88,-89,11,-107,-101,-99,-100,216,-150,-151,-153,-154,-155,-156,-87,-90,-92,-106,-98,-29,-149,-152,-157,-91,-28,-158,]),'MULTI_LINE_COMMENT':([2,3,5,7,8,9,10,11,12,13,62,63,80,139,140,141,142,152,194,195,196,199,200,203,204,205,211,212,213,214,215,216,217,244,245,246,248,249,253,255,256,257,272,273,276,],[12,12,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,-85,12,-93,-96,217,-86,-88,-89,12,-107,-101,-99,-100,217,-150,-151,-153,-154,-155,-156,-87,-90,-92,-106,-98,-29,-149,-152,-157,-91,-28,-158,]),'BREAK':([2,3,5,7,8,9,10,11,12,13,62,63,80,81,139,140,141,142,194,195,196,199,200,202,203,204,205,212,244,245,246,248,249,253,255,272,273,],[19,19,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,19,-85,19,-93,-96,-86,-88,-89,19,-107,19,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'CONTINUE':([2,3,5,7,8,9,10,11,12,13,62,63,80,81,139,140,141,142,194,195,196,199,200,202,203,204,205,212,244,245,246,248,249,253,255,272,273,],[20,20,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,20,-85,20,-93,-96,-86,-88,-89,20,-107,20,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'IF':([2,3,5,7,8,9,10,11,12,13,62,63,80,139,140,141,142,194,195,196,199,200,203,204,205,212,244,245,246,248,249,253,255,272,273,],[29,29,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,-85,29,-93,-96,-86,-88,-89,29,-107,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'WHILE':([2,3,5,7,8,9,10,11,12,13,62,63,80,139,140,141,142,194,195,196,199,200,203,204,205,212,244,245,246,248,249,253,255,272,273,],[31,31,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,-85,31,-93,-96,-86,-88,-89,31,-107,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'FUNCTION':([2,3,5,7,8,9,10,11,12,13,38,43,48,49,62,63,80,90,94,107,109,115,118,120,121,122,123,124,139,140,141,142,160,161,164,172,194,195,196,199,200,203,204,205,212,218,219,220,221,223,230,231,235,239,244,245,246,248,249,253,254,255,268,272,273,],[34,34,-3,-6,-7,-8,-9,-10,-11,-12,111,111,-56,-57,-4,-5,-97,111,111,111,111,111,-48,-49,-50,-51,-52,-53,-85,34,-93,-96,111,111,111,-48,-86,-88,-89,34,-107,-101,-99,-100,-150,34,-159,-160,-161,-132,111,111,111,111,-87,-90,-92,-106,-98,-29,111,-149,111,-91,-28,]),'CLASS':([2,3,5,7,8,9,10,11,12,13,62,63,80,139,140,141,142,194,195,196,199,200,203,204,205,212,244,245,246,248,249,253,255,272,273,],[37,37,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,-85,37,-93,-96,-86,-88,-89,37,-107,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'FSCANF':([2,3,5,7,8,9,10,11,12,13,62,63,80,81,139,140,141,142,194,195,196,199,200,202,203,204,205,212,244,245,246,248,249,253,255,272,273,],[39,39,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,39,-85,39,-93,-96,-86,-88,-89,39,-107,39,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'FGETS':([2,3,5,7,8,9,10,11,12,13,38,43,48,49,62,63,80,81,90,94,107,109,115,118,120,121,122,123,124,139,140,141,142,160,161,164,172,194,195,196,199,200,202,203,204,205,212,223,230,231,235,239,244,245,246,248,249,253,254,255,268,272,273,],[41,41,-3,-6,-7,-8,-9,-10,-11,-12,41,41,-56,-57,-4,-5,-97,41,41,41,41,41,41,-48,-49,-50,-51,-52,-53,-85,41,-93,-96,41,41,41,-48,-86,-88,-89,41,-107,41,-101,-99,-100,-150,-132,41,41,41,41,-87,-90,-92,-106,-98,-29,41,-149,41,-91,-28,]),'NAME':([2,3,5,7,8,9,10,11,12,13,34,37,38,43,48,49,62,63,80,81,90,94,107,109,112,115,118,120,121,122,123,124,134,139,140,141,142,160,161,162,164,172,194,195,196,199,200,202,203,204,205,212,223,230,231,235,239,244,245,246,248,249,253,254,255,268,272,273,],[35,35,-3,-6,-7,-8,-9,-10,-11,-12,89,93,35,35,-56,-57,-4,-5,-97,35,35,35,35,35,174,35,-48,-49,-50,-51,-52,-53,193,-85,35,-93,-96,35,35,227,35,-48,-86,-88,-89,35,-107,35,-101,-99,-100,-150,-132,35,35,35,35,-87,-90,-92,-106,-98,-29,35,-149,35,-91,-28,]),'RETURN':([2,3,5,7,8,9,10,11,12,13,62,63,80,81,139,140,141,142,194,195,196,199,200,202,203,204,205,212,244,245,246,248,249,253,255,272,273,],[43,43,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,43,-85,43,-93,-96,-86,-88,-89,43,-107,43,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'UNSET':([2,3,5,7,8,9,10,11,12,13,62,63,80,81,139,140,141,142,194,195,196,199,200,202,203,204,205,212,244,245,246,248,249,253,255,272,273,],[44,44,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,44,-85,44,-93,-96,-86,-88,-89,44,-107,44,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'COUNT':([2,3,5,7,8,9,10,11,12,13,62,63,80,81,139,140,141,142,194,195,196,199,200,202,203,204,205,212,244,245,246,248,249,253,255,272,273,],[45,45,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,45,-85,45,-93,-96,-86,-88,-89,45,-107,45,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'FOR':([2,3,5,7,8,9,10,11,12,13,62,63,80,139,140,141,142,194,195,196,199,200,203,204,205,212,244,245,246,248,249,253,255,272,273,],[47,47,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,-85,47,-93,-96,-86,-88,-89,47,-107,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'PRINT':([2,3,5,7,8,9,10,11,12,13,62,63,80,81,139,140,141,142,194,195,196,199,200,202,203,204,205,212,244,245,246,248,249,253,255,272,273,],[48,48,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,48,-85,48,-93,-96,-86,-88,-89,48,-107,48,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'ECHO':([2,3,5,7,8,9,10,11,12,13,62,63,80,81,139,140,141,142,194,195,196,199,200,202,203,204,205,212,244,245,246,248,249,253,255,272,273,],[49,49,-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,49,-85,49,-93,-96,-86,-88,-89,49,-107,49,-101,-99,-100,-150,-87,-90,-92,-106,-98,-29,-149,-91,-28,]),'ID':([2,3,5,7,8,9,10,11,12,13,32,36,38,43,48,49,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,83,85,86,87,88,90,94,107,109,115,118,120,121,122,123,124,126,127,128,129,130,131,132,133,139,140,141,142,147,153,160,161,164,172,173,190,194,195,196,199,200,202,203,204,205,212,218,219,220,221,223,230,231,235,239,242,243,244,245,246,248,249,252,253,254,255,268,272,273,279,285,],[50,50,-3,-6,-7,-8,-9,-10,-11,-12,50,50,102,102,-56,-57,50,-4,-5,50,50,50,-120,-121,-122,-123,-124,-125,-126,-127,-128,50,-97,50,50,50,-129,-130,-131,102,102,102,102,102,-48,-49,-50,-51,-52,-53,50,50,50,50,50,50,50,50,-85,50,-93,-96,50,50,102,102,102,-48,50,-95,-86,-88,-89,50,-107,50,-101,-99,-100,-150,50,-159,-160,-161,-132,102,102,102,102,-94,50,-87,-90,-92,-106,-98,50,-29,102,-149,102,-91,-28,50,50,]),'INTEGER':([2,3,5,7,8,9,10,11,12,13,32,36,38,43,48,49,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,83,85,86,87,88,90,94,107,109,115,118,119,120,121,122,123,124,126,129,130,131,132,139,140,141,142,153,160,161,164,171,172,190,194,195,196,199,200,202,203,204,205,212,223,230,231,235,239,240,242,244,245,246,248,249,253,254,255,268,272,273,],[52,52,-3,-6,-7,-8,-9,-10,-11,-12,52,52,52,52,-56,-57,52,-4,-5,52,52,52,-120,-121,-122,-123,-124,-125,-126,-127,-128,52,-97,52,52,52,-129,-130,-131,52,52,52,170,52,-48,182,-49,-50,-51,-52,-53,52,52,52,52,52,-85,52,-93,-96,52,52,52,170,182,-48,-95,-86,-88,-89,52,-107,52,-101,-99,-100,-150,-132,170,52,52,52,182,-94,-87,-90,-92,-106,-98,-29,52,-149,52,-91,-28,]),'FLOAT':([2,3,5,7,8,9,10,11,12,13,32,36,38,43,48,49,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,83,85,86,87,88,90,94,107,109,115,118,120,121,122,123,124,126,129,130,131,132,139,140,141,142,153,160,161,164,172,190,194,195,196,199,200,202,203,204,205,212,223,230,231,235,239,242,244,245,246,248,249,253,254,255,268,272,273,],[53,53,-3,-6,-7,-8,-9,-10,-11,-12,53,53,53,53,-56,-57,53,-4,-5,53,53,53,-120,-121,-122,-123,-124,-125,-126,-127,-128,53,-97,53,53,53,-129,-130,-131,53,53,53,53,53,-48,-49,-50,-51,-52,-53,53,53,53,53,53,-85,53,-93,-96,53,53,53,53,-48,-95,-86,-88,-89,53,-107,53,-101,-99,-100,-150,-132,53,53,53,53,-94,-87,-90,-92,-106,-98,-29,53,-149,53,-91,-28,]),'STRING':([2,3,5,7,8,9,10,11,12,13,32,36,38,43,48,49,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,83,85,86,87,88,90,94,107,109,115,118,119,120,121,122,123,124,126,129,130,131,132,139,140,141,142,153,160,161,164,171,172,190,194,195,196,199,200,202,203,204,205,212,223,230,231,235,236,239,240,242,244,245,246,248,249,253,254,255,268,272,273,],[40,40,-3,-6,-7,-8,-9,-10,-11,-12,40,40,97,97,-56,-57,40,-4,-5,40,40,40,-120,-121,-122,-123,-124,-125,-126,-127,-128,40,-97,40,40,40,-129,-130,-131,97,97,97,169,97,-48,181,-49,-50,-51,-52,-53,40,40,40,40,40,-85,40,-93,-96,40,97,97,169,181,-48,-95,-86,-88,-89,40,-107,40,-101,-99,-100,-150,-132,169,97,97,267,97,181,-94,-87,-90,-92,-106,-98,-29,97,-149,97,-91,-28,]),'LEFT_PAREN':([2,3,5,7,8,9,10,11,12,13,29,31,32,35,36,38,39,41,43,44,45,47,48,49,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,83,85,86,87,88,89,90,94,107,108,109,111,115,118,120,121,122,123,124,126,129,130,131,132,139,140,141,142,153,160,161,164,172,174,190,194,195,196,198,199,200,202,203,204,205,212,223,227,230,231,235,239,242,244,245,246,248,249,253,254,255,268,272,273,],[36,36,-3,-6,-7,-8,-9,-10,-11,-12,77,77,83,90,83,94,113,114,126,127,128,133,-56,-57,83,-4,-5,36,36,36,-120,-121,-122,-123,-124,-125,-126,-127,-128,83,-97,36,83,83,-129,-130,-131,147,126,153,126,164,126,173,126,-48,-49,-50,-51,-52,-53,83,36,36,36,36,-85,36,-93,-96,83,126,126,126,-48,235,-95,-86,-88,-89,77,36,-107,36,-101,-99,-100,-150,-132,90,126,126,126,126,-94,-87,-90,-92,-106,-98,-29,126,-149,126,-91,-28,]),'TRUE':([2,3,5,7,8,9,10,11,12,13,32,36,38,43,48,49,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,83,85,86,87,88,90,94,107,109,115,118,120,121,122,123,124,126,129,130,131,132,139,140,141,142,153,160,161,164,172,190,194,195,196,199,200,202,203,204,205,212,223,230,231,235,239,242,244,245,246,248,249,253,254,255,268,272,273,],[57,57,-3,-6,-7,-8,-9,-10,-11,-12,57,57,57,57,-56,-57,57,-4,-5,57,57,57,-120,-121,-122,-123,-124,-125,-126,-127,-128,57,-97,57,57,57,-129,-130,-131,57,57,57,57,57,-48,-49,-50,-51,-52,-53,57,57,57,57,57,-85,57,-93,-96,57,57,57,57,-48,-95,-86,-88,-89,57,-107,57,-101,-99,-100,-150,-132,57,57,57,57,-94,-87,-90,-92,-106,-98,-29,57,-149,57,-91,-28,]),'FALSE':([2,3,5,7,8,9,10,11,12,13,32,36,38,43,48,49,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,83,85,86,87,88,90,94,107,109,115,118,120,121,122,123,124,126,129,130,131,132,139,140,141,142,153,160,161,164,172,190,194,195,196,199,200,202,203,204,205,212,223,230,231,235,239,242,244,245,246,248,249,253,254,255,268,272,273,],[58,58,-3,-6,-7,-8,-9,-10,-11,-12,58,58,58,58,-56,-57,58,-4,-5,58,58,58,-120,-121,-122,-123,-124,-125,-126,-127,-128,58,-97,58,58,58,-129,-130,-131,58,58,58,58,58,-48,-49,-50,-51,-52,-53,58,58,58,58,58,-85,58,-93,-96,58,58,58,58,-48,-95,-86,-88,-89,58,-107,58,-101,-99,-100,-150,-132,58,58,58,58,-94,-87,-90,-92,-106,-98,-29,58,-149,58,-91,-28,]),'LOGICAL_NOT':([2,3,5,7,8,9,10,11,12,13,32,36,38,43,48,49,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,83,85,86,87,88,90,94,107,109,115,118,120,121,122,123,124,126,129,130,131,132,139,140,141,142,153,160,161,164,172,190,194,195,196,199,200,202,203,204,205,212,223,230,231,235,239,242,244,245,246,248,249,253,254,255,268,272,273,],[60,60,-3,-6,-7,-8,-9,-10,-11,-12,60,60,60,60,-56,-57,60,-4,-5,60,60,60,-120,-121,-122,-123,-124,-125,-126,-127,-128,60,-97,60,60,60,-129,-130,-131,60,60,60,60,60,-48,-49,-50,-51,-52,-53,60,60,60,60,60,-85,60,-93,-96,60,60,60,60,-48,-95,-86,-88,-89,60,-107,60,-101,-99,-100,-150,-132,60,60,60,60,-94,-87,-90,-92,-106,-98,-29,60,-149,60,-91,-28,]),'RIGHT_BRACE':([5,7,8,9,10,11,12,13,62,63,80,139,140,141,142,152,194,195,196,199,200,203,204,205,211,212,213,214,215,216,217,244,245,246,248,249,253,255,256,257,272,273,276,],[-3,-6,-7,-8,-9,-10,-11,-12,-4,-5,-97,-85,200,-93,-96,212,-86,-88,-89,248,-107,-101,-99,-100,255,-150,-151,-153,-154,-155,-156,-87,-90,-92,-106,-98,-29,-149,-152,-157,-91,-28,-158,]),'SEMICOLON':([6,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,32,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,95,96,97,98,99,100,101,102,103,104,105,106,110,116,117,125,133,135,136,137,138,144,146,149,150,151,163,177,178,185,186,187,188,189,190,191,193,200,201,210,222,224,225,226,227,229,237,238,241,242,248,258,259,262,264,265,269,271,277,278,280,284,286,],[63,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-111,81,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,81,-114,-55,-58,-61,-62,-63,-64,-65,-43,-67,-68,-69,-70,-114,-46,-47,-36,190,-116,-72,-73,-119,203,-117,-38,-84,-118,-71,-45,-135,-75,-76,-77,-78,242,-95,-102,-44,-107,203,-37,-54,-59,-60,-66,-44,-137,-39,-144,-148,-94,-106,276,-136,-144,-31,-162,-145,-103,-30,-163,-146,-147,-40,]),'RIGHT_PAREN':([14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,81,82,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,110,116,117,125,135,136,137,138,143,145,146,147,148,149,150,151,154,155,156,157,158,159,163,166,167,169,170,173,176,177,178,184,185,186,187,188,193,200,206,208,209,210,222,224,225,226,227,228,229,233,235,237,238,241,248,250,259,260,261,262,264,265,266,269,274,275,277,278,280,281,282,283,284,286,287,],[-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,144,-114,149,150,151,-55,-58,-61,-62,-63,-64,-65,-43,-67,-68,-69,-70,-114,-46,-47,-36,-116,-72,-73,-119,201,-104,-117,207,210,-38,-84,-118,222,223,150,-133,-134,-114,-71,-138,-140,-61,-80,234,237,-45,-135,241,-75,-76,-77,-78,-44,-107,251,-32,-34,-37,-54,-59,-60,-66,-44,259,-137,263,265,-39,-144,-148,-106,-105,-136,-139,-141,-144,-31,-162,278,-145,-33,-35,-30,-163,-146,284,286,-41,-147,-40,-42,]),'COMMA':([14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,82,92,95,96,97,98,99,100,101,102,103,104,105,106,110,116,117,125,135,136,137,138,143,145,146,148,149,150,151,154,156,159,163,165,166,167,169,170,175,177,178,185,186,187,188,189,191,193,200,206,208,209,210,222,224,225,226,227,228,229,233,237,238,241,248,250,259,260,261,262,264,265,266,267,269,271,274,275,277,278,280,282,283,284,286,287,],[-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-114,-82,161,-58,-61,-62,-63,-64,-65,-43,-67,-68,-69,-70,-114,-46,-47,161,-116,-72,-73,-119,202,-104,-117,161,-38,-84,-118,161,-62,-114,-71,230,-138,-140,-61,-80,236,-45,-135,-75,-76,-77,-78,243,-102,-44,-107,252,-32,-34,-37,-54,-59,-60,-66,-44,230,-137,252,-39,-144,-148,-106,-105,-136,-139,-141,-144,-31,-162,161,279,-145,-103,-33,-35,-30,-163,-146,285,-41,-147,-40,-42,]),'PLUS':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[64,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,64,64,-82,-83,64,-43,-114,-82,-72,-73,64,-82,-84,-118,64,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'MINUS':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[65,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,65,65,-82,-83,65,-43,-114,-82,-72,-73,65,-82,-84,-118,65,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'EQUAL_TO':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[67,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,67,67,-82,-83,67,-43,-114,-82,-72,-73,67,-82,-84,-118,67,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'NOT_EQUAL_TO':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[68,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,68,68,-82,-83,68,-43,-114,-82,-72,-73,68,-82,-84,-118,68,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'LESS_THAN':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[69,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,69,69,-82,-83,69,-43,-114,-82,-72,-73,69,-82,-84,-118,69,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'GREATER_THAN':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[70,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,70,70,-82,-83,70,-43,-114,-82,-72,-73,70,-82,-84,-118,70,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'LESS_EQUAL':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[71,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,71,71,-82,-83,71,-43,-114,-82,-72,-73,71,-82,-84,-118,71,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'GREATER_EQUAL':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[72,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,72,72,-82,-83,72,-43,-114,-82,-72,-73,72,-82,-84,-118,72,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'IDENTICAL_TO':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[73,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,73,73,-82,-83,73,-43,-114,-82,-72,-73,73,-82,-84,-118,73,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'NOT_IDENTICAL_TO':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[74,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,74,74,-82,-83,74,-43,-114,-82,-72,-73,74,-82,-84,-118,74,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'DIFFERENT':([28,30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,84,91,92,97,98,102,110,135,136,137,138,146,150,151,156,159,169,170,185,186,187,188,193,227,],[75,-111,-82,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,75,75,-82,-83,75,-43,-114,-82,-72,-73,75,-82,-84,-118,75,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'LOGICAL_AND':([30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,92,102,110,135,136,137,138,146,150,151,159,185,186,187,188,193,227,],[-111,86,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,86,-114,86,-43,-114,86,-72,-73,-119,86,-84,-118,-114,-75,-76,-77,-78,-44,-44,]),'LOGICAL_OR':([30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,92,102,110,135,136,137,138,146,150,151,159,185,186,187,188,193,227,],[-111,87,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,87,-114,87,-43,-114,87,-72,-73,-119,87,-84,-118,-114,-75,-76,-77,-78,-44,-44,]),'LOGICAL_XOR':([30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,92,102,110,135,136,137,138,146,150,151,159,185,186,187,188,193,227,],[-111,88,-83,-114,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,88,-114,88,-43,-114,88,-72,-73,-119,88,-84,-118,-114,-75,-76,-77,-78,-44,-44,]),'TIMES':([30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,92,97,102,110,135,136,137,138,146,150,151,159,169,170,185,186,187,188,193,227,],[-111,-82,-83,-114,129,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,-82,-83,-43,-114,-82,129,129,-119,-82,-84,-118,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'DIVIDE':([30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,92,97,102,110,135,136,137,138,146,150,151,159,169,170,185,186,187,188,193,227,],[-111,-82,-83,-114,130,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,-82,-83,-43,-114,-82,130,130,-119,-82,-84,-118,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'MOD':([30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,92,97,102,110,135,136,137,138,146,150,151,159,169,170,185,186,187,188,193,227,],[-111,-82,-83,-114,131,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,-82,-83,-43,-114,-82,131,131,-119,-82,-84,-118,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'POWER':([30,33,40,42,46,50,51,52,53,54,55,56,57,58,59,79,82,92,97,102,110,135,136,137,138,146,150,151,159,169,170,185,186,187,188,193,227,],[-111,-82,-83,-114,132,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-82,-114,-82,-83,-43,-114,-82,132,132,-119,-82,-84,-118,-114,-83,-80,-75,-76,-77,-78,-44,-44,]),'DOT':([30,33,40,46,50,51,52,53,54,55,56,57,58,59,82,92,95,96,97,98,99,100,101,102,103,104,105,106,110,116,117,125,135,136,137,138,146,148,149,150,151,154,156,159,163,177,185,186,187,188,193,200,210,224,225,226,227,229,237,248,259,262,264,265,266,277,278,],[-111,-82,-83,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-114,-82,160,-58,-61,-62,-63,-64,-65,-43,-67,-68,-69,-70,-114,-46,-47,160,-116,-72,-73,-119,-117,160,-38,-84,-118,160,-62,-114,-71,-45,-75,-76,-77,-78,-44,-107,-37,-59,-60,-66,-44,-137,-39,-106,-136,-144,-31,-162,160,-30,-163,]),'RIGHT_BRACKET':([30,33,40,46,50,51,52,53,54,55,56,57,58,59,82,97,98,99,100,101,102,103,104,105,106,110,116,117,119,135,136,137,138,146,149,150,151,163,165,166,167,169,170,177,179,181,182,185,186,187,188,193,200,210,226,227,229,232,237,248,259,260,261,262,264,265,270,277,278,],[-111,-82,-83,-74,-43,-79,-80,-81,-108,-109,-110,-112,-113,-115,-114,-61,-62,-63,-64,-65,-43,-67,-68,-69,-70,-114,-46,-47,180,-116,-72,-73,-119,-117,-38,-84,-118,-71,229,-138,-140,-61,-80,-45,238,-142,-143,-75,-76,-77,-78,-44,-107,-37,-66,-44,-137,262,-39,-106,-136,-139,-141,-144,-31,-162,281,-30,-163,]),'ARRAY':([38,43,48,49,90,94,107,109,115,118,120,121,122,123,124,160,161,164,172,223,230,231,235,239,254,268,],[108,108,-56,-57,108,108,108,108,108,108,-49,-50,-51,-52,-53,108,108,108,-48,-132,108,108,108,108,108,108,]),'LEFT_BRACKET':([38,42,43,48,49,50,90,94,102,107,109,110,115,118,120,121,122,123,124,159,160,161,164,172,183,193,223,227,230,231,235,239,254,268,],[109,119,109,-56,-57,-43,109,109,-43,109,109,171,109,109,-49,-50,-51,-52,-53,171,109,109,109,-48,240,-44,-132,-44,109,109,109,109,109,109,]),'NEW':([38,43,48,49,90,94,107,109,115,118,120,121,122,123,124,160,161,164,172,223,230,231,235,239,254,268,],[112,112,-56,-57,112,112,112,112,112,-48,-49,-50,-51,-52,-53,112,112,112,-48,-132,112,112,112,112,112,112,]),'PLUS_PLUS':([42,50,102,110,159,192,193,227,],[116,-43,-43,116,116,116,-44,-44,]),'MINUS_MINUS':([42,50,102,110,159,192,193,227,],[117,-43,-43,117,117,117,-44,-44,]),'EQUALS':([42,50,102,110,159,180,192,193,209,227,238,],[118,-43,-43,172,172,239,172,-44,254,-44,268,]),'PLUS_EQUALS':([42,50,102,110,159,192,193,227,],[120,-43,-43,120,120,120,-44,-44,]),'MINUS_EQUALS':([42,50,102,110,159,192,193,227,],[121,-43,-43,121,121,121,-44,-44,]),'TIMES_EQUALS':([42,50,102,110,159,192,193,227,],[122,-43,-43,122,122,122,-44,-44,]),'DIVIDE_EQUALS':([42,50,102,110,159,192,193,227,],[123,-43,-43,123,123,123,-44,-44,]),'MOD_EQUALS':([42,50,102,110,159,192,193,227,],[124,-43,-43,124,124,124,-44,-44,]),'CALL':([50,102,],[134,162,]),'LEFT_BRACE':([76,78,93,144,151,197,201,207,234,247,251,263,],[140,140,152,140,-118,140,140,140,140,140,140,140,]),'INT_TYPE':([94,126,153,],[157,157,157,]),'FLOAT_TYPE':([94,126,153,],[158,158,158,]),'STDIN':([113,114,],[175,176,]),'ELSE':([139,194,196,200,245,248,272,],[197,197,-89,-107,-90,-106,-91,]),'ELSEIF':([139,194,196,200,245,248,272,],[198,198,-89,-107,-90,-106,-91,]),'PUBLIC':([152,200,211,213,214,215,216,217,248,253,256,257,273,276,],[219,-107,219,-151,-153,-154,-155,-156,-106,-29,-152,-157,-28,-158,]),'PRIVATE':([152,200,211,213,214,215,216,217,248,253,256,257,273,276,],[220,-107,220,-151,-153,-154,-155,-156,-106,-29,-152,-157,-28,-158,]),'PROTECTED':([152,200,211,213,214,215,216,217,248,253,256,257,273,276,],[221,-107,221,-151,-153,-154,-155,-156,-106,-29,-152,-157,-28,-158,]),'KEY_VALUE':([168,169,170,],[231,-142,-143,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([2,140,],[3,199,]),'statement2':([2,3,140,199,],[5,62,5,62,]),'statement':([2,3,81,140,199,202,],[6,6,145,6,6,250,]),'if_statement':([2,3,140,199,],[7,7,7,7,]),'while_statement':([2,3,140,199,],[8,8,8,8,]),'for_statement':([2,3,140,199,],[9,9,9,9,]),'function_statement':([2,3,140,199,218,],[10,10,10,10,257,]),'class_declaration':([2,3,140,199,],[13,13,13,13,]),'print_statement':([2,3,81,140,199,202,],[14,14,14,14,14,14,]),'fscanf_statement':([2,3,81,140,199,202,],[15,15,15,15,15,15,]),'fgets_statement':([2,3,38,43,81,90,94,107,109,115,140,160,161,164,199,202,230,231,235,239,254,268,],[16,16,105,105,16,105,105,105,105,105,16,105,105,105,16,16,105,105,105,105,105,105,]),'assignment_statement':([2,3,38,43,81,90,94,107,109,115,133,140,160,161,164,199,202,230,231,235,239,243,254,268,],[17,17,104,104,17,104,104,104,104,104,191,17,104,104,104,17,17,104,104,104,104,271,104,104,]),'array_declaration_statement':([2,3,81,140,199,202,],[18,18,18,18,18,18,]),'function_call':([2,3,38,43,81,90,94,107,109,115,140,160,161,162,164,199,202,230,231,235,239,254,268,],[21,21,101,101,21,101,101,101,101,101,21,101,101,226,101,21,21,101,101,101,101,101,101,]),'return_statement':([2,3,81,140,199,202,],[22,22,22,22,22,22,]),'array_indexing':([2,3,38,43,81,90,94,107,109,115,140,160,161,164,199,202,230,231,235,239,254,268,],[23,23,100,100,23,100,100,100,100,100,23,100,100,100,23,23,100,100,100,100,100,100,]),'array_add_element':([2,3,81,140,199,202,],[24,24,24,24,24,24,]),'array_modify_element':([2,3,81,140,199,202,],[25,25,25,25,25,25,]),'array_remove_element':([2,3,81,140,199,202,],[26,26,26,26,26,26,]),'array_count_elements':([2,3,81,140,199,202,],[27,27,27,27,27,27,]),'expression':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,199,202,230,231,235,239,254,268,],[28,28,84,91,98,98,84,84,84,138,84,28,91,84,98,156,98,98,98,91,84,84,84,84,28,91,98,98,98,28,28,98,98,98,98,98,98,]),'parenthesized_condition':([2,3,29,31,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,198,199,202,230,231,235,239,254,268,],[30,30,76,78,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,247,30,30,30,30,30,30,30,30,]),'for_part1':([2,3,140,199,],[32,32,32,32,]),'condition':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,199,202,230,231,235,239,254,268,],[33,33,79,92,33,33,135,33,33,33,92,33,92,146,33,92,33,33,33,92,33,33,33,33,33,92,33,33,33,33,33,33,33,33,33,33,33,]),'print_function':([2,3,81,140,199,202,],[38,38,38,38,38,38,]),'variable':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,127,128,129,130,131,132,133,140,147,153,160,161,164,173,199,202,218,230,231,235,239,243,252,254,268,279,285,],[42,42,82,82,110,110,82,82,82,82,82,42,82,82,110,159,110,110,110,82,183,184,82,82,82,82,192,42,209,82,110,110,110,209,42,42,258,110,110,110,110,192,209,110,110,283,287,]),'term':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,199,202,230,231,235,239,254,268,],[46,46,46,46,46,46,46,136,137,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'factor':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,199,202,230,231,235,239,254,268,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,185,186,187,188,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'simple_condition':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,199,202,230,231,235,239,254,268,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'negated_condition':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,199,202,230,231,235,239,254,268,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'complex_condition':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,199,202,230,231,235,239,254,268,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'relational_expression':([2,3,32,36,38,43,60,64,65,66,77,81,83,85,90,94,107,109,115,126,129,130,131,132,140,153,160,161,164,199,202,230,231,235,239,254,268,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'relational_operator':([28,84,91,98,138,156,],[66,66,66,66,66,66,]),'for_part3':([32,79,],[80,142,]),'logical_operator':([33,79,92,135,146,],[85,85,85,85,85,]),'arguments':([38,43,90,94,235,],[95,125,148,154,266,]),'argument':([38,43,90,94,107,109,115,160,161,164,230,231,235,239,254,268,],[96,96,96,96,163,167,177,224,225,167,167,261,96,269,275,280,]),'array':([38,43,90,94,107,109,115,118,160,161,164,230,231,235,239,254,268,],[99,99,99,99,99,99,99,178,99,99,99,99,99,99,99,99,99,]),'anonymous_function':([38,43,90,94,107,109,115,160,161,164,230,231,235,239,254,268,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'object_creation':([38,43,90,94,107,109,115,160,161,164,230,231,235,239,254,268,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'casting':([38,43,90,94,107,109,115,160,161,164,230,231,235,239,254,268,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'assignment_operator':([42,110,159,192,],[115,115,115,115,]),'block':([76,78,144,197,201,207,234,247,251,263,],[139,141,205,246,205,253,264,272,273,277,]),'statement_list':([81,],[143,]),'casting_type':([94,126,153,],[155,155,155,]),'array_elements':([109,164,],[165,228,]),'array_argument':([109,164,230,],[166,166,260,]),'clave':([109,119,164,171,230,240,],[168,179,168,232,168,270,]),'assignment_list':([133,],[189,]),'else_if_extended':([139,],[194,]),'if_part3':([139,194,],[195,244,]),'if_part2':([139,194,],[196,245,]),'for_part4':([144,201,],[204,249,]),'parameters':([147,173,],[206,233,]),'parameter':([147,173,252,],[208,208,274,]),'class_statements':([152,],[211,]),'class_statement':([152,211,],[213,256,]),'method_declaration':([152,211,],[214,214,]),'property_declaration':([152,211,],[215,215,]),'visibility_operator':([152,211,],[218,218,]),'variable_list':([279,],[282,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPEN_TAG statements CLOSE_TAG','program',3,'p_program','parserPHP.py',29),
  ('program -> OPEN_TAG CLOSE_TAG','program',2,'p_program','parserPHP.py',30),
  ('statements -> statement2','statements',1,'p_statements','parserPHP.py',38),
  ('statements -> statements statement2','statements',2,'p_statements','parserPHP.py',39),
  ('statement2 -> statement SEMICOLON','statement2',2,'p_statement2','parserPHP.py',47),
  ('statement2 -> if_statement','statement2',1,'p_statement2','parserPHP.py',48),
  ('statement2 -> while_statement','statement2',1,'p_statement2','parserPHP.py',49),
  ('statement2 -> for_statement','statement2',1,'p_statement2','parserPHP.py',50),
  ('statement2 -> function_statement','statement2',1,'p_statement2','parserPHP.py',51),
  ('statement2 -> ONE_LINE_COMMENT','statement2',1,'p_statement2','parserPHP.py',52),
  ('statement2 -> MULTI_LINE_COMMENT','statement2',1,'p_statement2','parserPHP.py',53),
  ('statement2 -> class_declaration','statement2',1,'p_statement2','parserPHP.py',54),
  ('statement -> print_statement','statement',1,'p_statement','parserPHP.py',58),
  ('statement -> fscanf_statement','statement',1,'p_statement','parserPHP.py',59),
  ('statement -> fgets_statement','statement',1,'p_statement','parserPHP.py',60),
  ('statement -> assignment_statement','statement',1,'p_statement','parserPHP.py',61),
  ('statement -> array_declaration_statement','statement',1,'p_statement','parserPHP.py',62),
  ('statement -> BREAK','statement',1,'p_statement','parserPHP.py',63),
  ('statement -> CONTINUE','statement',1,'p_statement','parserPHP.py',64),
  ('statement -> function_call','statement',1,'p_statement','parserPHP.py',65),
  ('statement -> return_statement','statement',1,'p_statement','parserPHP.py',66),
  ('statement -> array_indexing','statement',1,'p_statement','parserPHP.py',67),
  ('statement -> array_add_element','statement',1,'p_statement','parserPHP.py',68),
  ('statement -> array_modify_element','statement',1,'p_statement','parserPHP.py',69),
  ('statement -> array_remove_element','statement',1,'p_statement','parserPHP.py',70),
  ('statement -> array_count_elements','statement',1,'p_statement','parserPHP.py',71),
  ('statement -> expression','statement',1,'p_statement','parserPHP.py',72),
  ('function_statement -> FUNCTION NAME LEFT_PAREN parameters RIGHT_PAREN block','function_statement',6,'p_function_statement','parserPHP.py',107),
  ('function_statement -> FUNCTION NAME LEFT_PAREN RIGHT_PAREN block','function_statement',5,'p_function_statement','parserPHP.py',108),
  ('anonymous_function -> FUNCTION LEFT_PAREN parameters RIGHT_PAREN block','anonymous_function',5,'p_anonymous_function','parserPHP.py',119),
  ('anonymous_function -> FUNCTION LEFT_PAREN RIGHT_PAREN block','anonymous_function',4,'p_anonymous_function','parserPHP.py',120),
  ('parameters -> parameter','parameters',1,'p_parameters','parserPHP.py',127),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','parserPHP.py',128),
  ('parameter -> variable','parameter',1,'p_parameter','parserPHP.py',136),
  ('parameter -> variable EQUALS argument','parameter',3,'p_parameter','parserPHP.py',137),
  ('return_statement -> RETURN arguments','return_statement',2,'p_return_statement','parserPHP.py',148),
  ('function_call -> NAME LEFT_PAREN arguments RIGHT_PAREN','function_call',4,'p_function_call','parserPHP.py',153),
  ('function_call -> NAME LEFT_PAREN RIGHT_PAREN','function_call',3,'p_function_call','parserPHP.py',154),
  ('fgets_statement -> FGETS LEFT_PAREN STDIN RIGHT_PAREN','fgets_statement',4,'p_fgets_statement','parserPHP.py',165),
  ('fscanf_statement -> FSCANF LEFT_PAREN STDIN COMMA STRING COMMA variable_list RIGHT_PAREN','fscanf_statement',8,'p_fscanf_statement','parserPHP.py',170),
  ('variable_list -> variable','variable_list',1,'p_variable_list','parserPHP.py',174),
  ('variable_list -> variable_list COMMA variable','variable_list',3,'p_variable_list','parserPHP.py',175),
  ('variable -> ID','variable',1,'p_variable','parserPHP.py',184),
  ('variable -> ID CALL NAME','variable',3,'p_variable','parserPHP.py',185),
  ('assignment_statement -> variable assignment_operator argument','assignment_statement',3,'p_assignment_statement','parserPHP.py',193),
  ('assignment_statement -> variable PLUS_PLUS','assignment_statement',2,'p_assignment_statement','parserPHP.py',194),
  ('assignment_statement -> variable MINUS_MINUS','assignment_statement',2,'p_assignment_statement','parserPHP.py',195),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',243),
  ('assignment_operator -> PLUS_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',244),
  ('assignment_operator -> MINUS_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',245),
  ('assignment_operator -> TIMES_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',246),
  ('assignment_operator -> DIVIDE_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',247),
  ('assignment_operator -> MOD_EQUALS','assignment_operator',1,'p_assignment_operator','parserPHP.py',248),
  ('print_statement -> print_function LEFT_PAREN arguments RIGHT_PAREN','print_statement',4,'p_print_statement','parserPHP.py',253),
  ('print_statement -> print_function arguments','print_statement',2,'p_print_statement','parserPHP.py',254),
  ('print_function -> PRINT','print_function',1,'p_print_function','parserPHP.py',261),
  ('print_function -> ECHO','print_function',1,'p_print_function','parserPHP.py',262),
  ('arguments -> argument','arguments',1,'p_arguments','parserPHP.py',266),
  ('arguments -> arguments DOT argument','arguments',3,'p_arguments','parserPHP.py',267),
  ('arguments -> arguments COMMA argument','arguments',3,'p_arguments','parserPHP.py',268),
  ('argument -> STRING','argument',1,'p_argument','parserPHP.py',276),
  ('argument -> expression','argument',1,'p_argument','parserPHP.py',277),
  ('argument -> array','argument',1,'p_argument','parserPHP.py',278),
  ('argument -> array_indexing','argument',1,'p_argument','parserPHP.py',279),
  ('argument -> function_call','argument',1,'p_argument','parserPHP.py',280),
  ('argument -> ID CALL function_call','argument',3,'p_argument','parserPHP.py',281),
  ('argument -> anonymous_function','argument',1,'p_argument','parserPHP.py',282),
  ('argument -> assignment_statement','argument',1,'p_argument','parserPHP.py',283),
  ('argument -> fgets_statement','argument',1,'p_argument','parserPHP.py',284),
  ('argument -> object_creation','argument',1,'p_argument','parserPHP.py',285),
  ('argument -> casting argument','argument',2,'p_argument','parserPHP.py',286),
  ('expression -> expression PLUS term','expression',3,'p_expression_arithmetic','parserPHP.py',296),
  ('expression -> expression MINUS term','expression',3,'p_expression_arithmetic','parserPHP.py',297),
  ('expression -> term','expression',1,'p_expression_arithmetic','parserPHP.py',298),
  ('term -> term TIMES factor','term',3,'p_term','parserPHP.py',306),
  ('term -> term DIVIDE factor','term',3,'p_term','parserPHP.py',307),
  ('term -> term MOD factor','term',3,'p_term','parserPHP.py',308),
  ('term -> term POWER factor','term',3,'p_term','parserPHP.py',309),
  ('term -> factor','term',1,'p_term','parserPHP.py',310),
  ('factor -> INTEGER','factor',1,'p_factor','parserPHP.py',317),
  ('factor -> FLOAT','factor',1,'p_factor','parserPHP.py',318),
  ('factor -> condition','factor',1,'p_factor','parserPHP.py',319),
  ('factor -> STRING','factor',1,'p_factor','parserPHP.py',320),
  ('factor -> LEFT_PAREN expression RIGHT_PAREN','factor',3,'p_factor','parserPHP.py',321),
  ('if_statement -> IF parenthesized_condition block','if_statement',3,'p_if_statement','parserPHP.py',352),
  ('if_statement -> IF parenthesized_condition block else_if_extended','if_statement',4,'p_if_statement','parserPHP.py',353),
  ('if_statement -> IF parenthesized_condition block else_if_extended if_part3','if_statement',5,'p_if_statement','parserPHP.py',354),
  ('if_statement -> IF parenthesized_condition block if_part3','if_statement',4,'p_if_statement','parserPHP.py',355),
  ('else_if_extended -> if_part2','else_if_extended',1,'p_else_if_extended','parserPHP.py',364),
  ('else_if_extended -> else_if_extended if_part2','else_if_extended',2,'p_else_if_extended','parserPHP.py',365),
  ('if_part2 -> ELSEIF parenthesized_condition block','if_part2',3,'p_else_if_statement','parserPHP.py',373),
  ('if_part3 -> ELSE block','if_part3',2,'p_else_statement','parserPHP.py',377),
  ('while_statement -> WHILE parenthesized_condition block','while_statement',3,'p_while_statement','parserPHP.py',382),
  ('for_part1 -> FOR LEFT_PAREN assignment_list SEMICOLON','for_part1',4,'p_for_part1','parserPHP.py',387),
  ('for_part1 -> FOR LEFT_PAREN SEMICOLON','for_part1',3,'p_for_part1','parserPHP.py',388),
  ('for_statement -> for_part1 condition for_part3','for_statement',3,'p_for_part2','parserPHP.py',395),
  ('for_statement -> for_part1 for_part3','for_statement',2,'p_for_part2','parserPHP.py',396),
  ('for_part3 -> SEMICOLON statement_list RIGHT_PAREN for_part4','for_part3',4,'p_for_part3','parserPHP.py',403),
  ('for_part3 -> SEMICOLON RIGHT_PAREN for_part4','for_part3',3,'p_for_part3','parserPHP.py',404),
  ('for_part4 -> block','for_part4',1,'p_for_part4','parserPHP.py',411),
  ('for_part4 -> SEMICOLON','for_part4',1,'p_for_part4','parserPHP.py',412),
  ('assignment_list -> assignment_statement','assignment_list',1,'p_assignment_list','parserPHP.py',416),
  ('assignment_list -> assignment_list COMMA assignment_statement','assignment_list',3,'p_assignment_list','parserPHP.py',417),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parserPHP.py',425),
  ('statement_list -> statement_list COMMA statement','statement_list',3,'p_statement_list','parserPHP.py',426),
  ('block -> LEFT_BRACE statements RIGHT_BRACE','block',3,'p_block','parserPHP.py',435),
  ('block -> LEFT_BRACE RIGHT_BRACE','block',2,'p_block','parserPHP.py',436),
  ('condition -> simple_condition','condition',1,'p_condition','parserPHP.py',444),
  ('condition -> negated_condition','condition',1,'p_condition','parserPHP.py',445),
  ('condition -> complex_condition','condition',1,'p_condition','parserPHP.py',446),
  ('condition -> parenthesized_condition','condition',1,'p_condition','parserPHP.py',447),
  ('simple_condition -> TRUE','simple_condition',1,'p_simple_condition','parserPHP.py',451),
  ('simple_condition -> FALSE','simple_condition',1,'p_simple_condition','parserPHP.py',452),
  ('simple_condition -> variable','simple_condition',1,'p_simple_condition','parserPHP.py',453),
  ('simple_condition -> relational_expression','simple_condition',1,'p_simple_condition','parserPHP.py',454),
  ('negated_condition -> LOGICAL_NOT condition','negated_condition',2,'p_negated_condition','parserPHP.py',458),
  ('complex_condition -> condition logical_operator condition','complex_condition',3,'p_complex_condition','parserPHP.py',462),
  ('parenthesized_condition -> LEFT_PAREN condition RIGHT_PAREN','parenthesized_condition',3,'p_parenthesized_condition','parserPHP.py',466),
  ('relational_expression -> expression relational_operator expression','relational_expression',3,'p_relational_expression','parserPHP.py',470),
  ('relational_operator -> EQUAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',474),
  ('relational_operator -> NOT_EQUAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',475),
  ('relational_operator -> LESS_THAN','relational_operator',1,'p_relational_operator','parserPHP.py',476),
  ('relational_operator -> GREATER_THAN','relational_operator',1,'p_relational_operator','parserPHP.py',477),
  ('relational_operator -> LESS_EQUAL','relational_operator',1,'p_relational_operator','parserPHP.py',478),
  ('relational_operator -> GREATER_EQUAL','relational_operator',1,'p_relational_operator','parserPHP.py',479),
  ('relational_operator -> IDENTICAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',480),
  ('relational_operator -> NOT_IDENTICAL_TO','relational_operator',1,'p_relational_operator','parserPHP.py',481),
  ('relational_operator -> DIFFERENT','relational_operator',1,'p_relational_operator','parserPHP.py',482),
  ('logical_operator -> LOGICAL_AND','logical_operator',1,'p_logical_operator','parserPHP.py',486),
  ('logical_operator -> LOGICAL_OR','logical_operator',1,'p_logical_operator','parserPHP.py',487),
  ('logical_operator -> LOGICAL_XOR','logical_operator',1,'p_logical_operator','parserPHP.py',488),
  ('casting -> LEFT_PAREN casting_type RIGHT_PAREN','casting',3,'p_casting','parserPHP.py',493),
  ('casting_type -> INT_TYPE','casting_type',1,'p_casting_type','parserPHP.py',497),
  ('casting_type -> FLOAT_TYPE','casting_type',1,'p_casting_type','parserPHP.py',498),
  ('array_declaration_statement -> variable EQUALS array','array_declaration_statement',3,'p_array_declaration_statement','parserPHP.py',503),
  ('array -> ARRAY LEFT_PAREN array_elements RIGHT_PAREN','array',4,'p_array','parserPHP.py',508),
  ('array -> LEFT_BRACKET array_elements RIGHT_BRACKET','array',3,'p_array','parserPHP.py',509),
  ('array_elements -> array_argument','array_elements',1,'p_array_elements','parserPHP.py',516),
  ('array_elements -> array_elements COMMA array_argument','array_elements',3,'p_array_elements','parserPHP.py',517),
  ('array_argument -> argument','array_argument',1,'p_array_argument','parserPHP.py',526),
  ('array_argument -> clave KEY_VALUE argument','array_argument',3,'p_array_argument','parserPHP.py',527),
  ('clave -> STRING','clave',1,'p_clave','parserPHP.py',534),
  ('clave -> INTEGER','clave',1,'p_clave','parserPHP.py',535),
  ('array_indexing -> variable LEFT_BRACKET clave RIGHT_BRACKET','array_indexing',4,'p_array_indexing','parserPHP.py',570),
  ('array_add_element -> variable LEFT_BRACKET RIGHT_BRACKET EQUALS argument','array_add_element',5,'p_array_add_element','parserPHP.py',584),
  ('array_modify_element -> variable LEFT_BRACKET clave RIGHT_BRACKET EQUALS argument','array_modify_element',6,'p_array_modify_element','parserPHP.py',591),
  ('array_remove_element -> UNSET LEFT_PAREN variable LEFT_BRACKET clave RIGHT_BRACKET RIGHT_PAREN','array_remove_element',7,'p_array_remove_element','parserPHP.py',605),
  ('array_count_elements -> COUNT LEFT_PAREN variable RIGHT_PAREN','array_count_elements',4,'p_array_count_elements','parserPHP.py',619),
  ('class_declaration -> CLASS NAME LEFT_BRACE class_statements RIGHT_BRACE','class_declaration',5,'p_class_declaration','parserPHP.py',627),
  ('class_declaration -> CLASS NAME LEFT_BRACE RIGHT_BRACE','class_declaration',4,'p_class_declaration','parserPHP.py',628),
  ('class_statements -> class_statement','class_statements',1,'p_class_statements','parserPHP.py',635),
  ('class_statements -> class_statements class_statement','class_statements',2,'p_class_statements','parserPHP.py',636),
  ('class_statement -> method_declaration','class_statement',1,'p_class_statement','parserPHP.py',644),
  ('class_statement -> property_declaration','class_statement',1,'p_class_statement','parserPHP.py',645),
  ('class_statement -> ONE_LINE_COMMENT','class_statement',1,'p_class_statement','parserPHP.py',646),
  ('class_statement -> MULTI_LINE_COMMENT','class_statement',1,'p_class_statement','parserPHP.py',647),
  ('method_declaration -> visibility_operator function_statement','method_declaration',2,'p_method_declaration','parserPHP.py',651),
  ('property_declaration -> visibility_operator variable SEMICOLON','property_declaration',3,'p_property_declaration','parserPHP.py',655),
  ('visibility_operator -> PUBLIC','visibility_operator',1,'p_visibility_operator','parserPHP.py',659),
  ('visibility_operator -> PRIVATE','visibility_operator',1,'p_visibility_operator','parserPHP.py',660),
  ('visibility_operator -> PROTECTED','visibility_operator',1,'p_visibility_operator','parserPHP.py',661),
  ('object_creation -> NEW NAME LEFT_PAREN RIGHT_PAREN','object_creation',4,'p_object_creation','parserPHP.py',665),
  ('object_creation -> NEW NAME LEFT_PAREN arguments RIGHT_PAREN','object_creation',5,'p_object_creation','parserPHP.py',666),
]
